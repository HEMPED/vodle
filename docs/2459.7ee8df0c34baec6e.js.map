{"version":3,"file":"2459.7ee8df0c34baec6e.js","mappings":"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","names":["i0","DelegationDialogPage","constructor","popover","formBuilder","translate","G","this","environment","delegate_nickname","type","message","from","ngOnInit","ionViewWillEnter","can_use_web_share","navigator","share","can_share","Capacitor","formGroup","group","UntypedFormControl","Validators","S","email","p","did","request","private_key","agreement","Del","prepare_delegation","parent","pid","message_title","instant","due","D","format_date","update_request","ready","ionViewDidEnter","setTimeout","focus_element","setFocus","delegate_nickname_changed","get","value","setp","from_changed","set_delegation_link","L","entry","mailto_url","encodeURIComponent","message_body","ClosePopover","dismiss","delegation_link","get_delegation_link","String","fromCharCode","repeat","title","share_button_clicked","Share","text","dialogTitle","then","res","info","after_request_was_sent","catch","err","error","copy_button_clicked","window","clipboard","writeText","LocalNotifications","notifications","body","nickname","id","trace","warn","update_delegation_info","exit","email_button_clicked","ev","close","selectors","routes","path","component","DelegationDialogPageRoutingModule","RouterModule","DelegationDialogPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","TranslateModule","registerPlugin","web","o","m","ShareWeb"],"sourceRoot":"webpack:///","sources":["./src/app/delegation-dialog/delegation-dialog.page.html","./src/app/delegation-dialog/delegation-dialog.page.ts","./src/app/delegation-dialog/delegation-dialog-routing.module.ts","./src/app/delegation-dialog/delegation-dialog.module.ts","./node_modules/@capacitor/share/dist/esm/index.js"],"sourcesContent":["<!--\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<ion-content *ngIf=\"ready\">\n\n  <ng-container *ngIf=\"E.delegation.enabled\">\n    <form [formGroup]=\"formGroup\">\n      <ion-list lines=\"full\">\n        <ion-item lines=\"none\">\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n            <h1 [innerHtml]=\"'delegation-request.header'|translate\"></h1> \n            <p [innerHtml]=\"'delegation-request.intro'|translate\"></p> \n          </ion-col>      \n        </ion-item>\n        <ion-item>\n          <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'delegation-request.nickname-label'|translate\"></ion-label>\n          <ion-input \n            formControlName=\"delegate_nickname\" \n            autofocus=\"true\" #focus_element\n            [placeholder]=\"'delegation-request.nickname-placeholder'|translate\"\n            (ionChange)=\"delegate_nickname_changed()\" debounce=\"100\"\n            (ionBlur)=\"delegate_nickname_changed()\"\n            type=\"text\" [maxlength]=\"E.max_len.name\">\n          </ion-input>\n        </ion-item>\n        <div class=\"validation-errors\">\n          <ng-container *ngFor=\"let validation of validation_messages.delegate_nickname\">\n            <div class=\"error-message\" \n                *ngIf=\"formGroup.get('delegate_nickname').hasError(validation.type) \n                        && (formGroup.get('delegate_nickname').dirty || formGroup.get('delegate_nickname').touched)\"\n                [innerHtml]=\"validation.message|translate\">\n            </div>\n          </ng-container>\n        </div>\n        <ion-item>\n          <small>\n            <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'delegation-request.from-label'|translate\"></ion-label>\n            <ion-input \n              formControlName=\"from\" \n              [placeholder]=\"'delegation-request.from-placeholder'|translate\"\n              (ionChange)=\"from_changed()\" debounce=\"100\"\n              (ionBlur)=\"from_changed()\"\n              type=\"text\" [maxlength]=\"E.max_len.name\">\n            </ion-input>\n          </small>\n        </ion-item>\n        <ng-container *ngIf=\"can_share\">\n          <ion-item lines=\"none\">\n            <ion-col class=\"ion-no-padding ion-no-margin\">\n              <small><p [innerHtml]=\"'delegation-request.request-options-with-share'|translate\"></p></small> \n            </ion-col>      \n          </ion-item>\n          <ion-item lines=\"none\" class=\"ion-text-end\" text-wrap>\n            <ion-button color=\"primary\" slot=\"end\" [disabled]=\"!formGroup.valid\"\n                shape=\"round\"\n                (click)=\"share_button_clicked()\">\n              <span [innerHtml]=\"'inviteto.share'|translate\"></span>&nbsp;\n              <ion-icon name=\"share-social-outline\"></ion-icon> <!--TODO: use correct share icon-->\n            </ion-button>\n          </ion-item>\n        </ng-container>\n        <ng-container *ngIf=\"!can_share\">\n          <ion-item lines=\"none\">\n            <ion-col class=\"ion-no-padding ion-no-margin\">\n              <small><p [innerHtml]=\"'delegation-request.request-options-without-share'|translate\"></p></small> \n            </ion-col>      \n          </ion-item>\n        </ng-container>\n        <ion-item \n            lines=\"none\" class=\"ion-text-end\" text-wrap>\n          <ion-button color=\"primary\" slot=\"end\" [disabled]=\"!formGroup.valid\"\n                shape=\"round\" (click)=\"email_button_clicked($event)\">\n            <a [href]=\"mailto_url\" target=\"_top\" style=\"color:inherit;text-decoration:inherit\">\n              <span [innerHtml]=\"'delegation-request.compose-email'|translate\"></span>&nbsp;\n              <ion-icon name=\"mail-open-outline\"></ion-icon> <!--TODO: make icon show in correct size and alignment-->\n            </a>\n          </ion-button>\n        </ion-item>\n        <ion-item \n            lines=\"none\" class=\"ion-text-end\" text-wrap>\n          <ion-button color=\"primary\" slot=\"end\" [disabled]=\"!formGroup.valid\"\n              shape=\"round\"\n              (click)=\"copy_button_clicked()\">\n            <span [innerHtml]=\"'delegation-request.copy-link'|translate\"></span>&nbsp;\n            <ion-icon name=\"copy-outline\"></ion-icon> <!--TODO: use correct clipboard icon-->\n          </ion-button>\n        </ion-item>\n      </ion-list>\n    </form>\n  </ng-container>\n\n  <!-- IF DISABLED: -->\n\n  <ng-container *ngIf=\"!E.delegation.enabled\">\n    <ion-list lines=\"full\">\n      <ion-item lines=\"none\">\n        <span [innerHtml]=\"'delegation-request.disabled'|translate\"></span>\n      </ion-item>\n      <ion-item \n      lines=\"none\" class=\"ion-text-end\" text-wrap>\n        <ion-button color=\"primary\" slot=\"end\"\n            shape=\"round\"\n            (click)=\"close()\">\n          <span [innerHtml]=\"'OK'|translate\"></span>&nbsp;\n        </ion-button>\n      </ion-item>\n    </ion-list>\n  </ng-container>\n\n</ion-content>\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { Validators, UntypedFormBuilder, UntypedFormGroup, UntypedFormControl, ValidationErrors, AbstractControl } from '@angular/forms';\nimport { IonInput, PopoverController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Capacitor } from '@capacitor/core';\nimport { Share } from '@capacitor/share';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\nimport { GlobalService } from \"../global.service\";\nimport { PollPage } from '../poll/poll.module';  \nimport { Poll } from '../poll.service';\nimport { del_agreement_t, del_request_t } from '../data.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-delegation-dialog',\n  templateUrl: './delegation-dialog.page.html',\n  styleUrls: ['./delegation-dialog.page.scss'],\n})\nexport class DelegationDialogPage implements OnInit {\n\n  E = environment;\n  \n  @Input() parent: PollPage;\n\n  ready = false;\n\n  can_use_web_share: boolean;\n  can_share: boolean;\n\n  formGroup: UntypedFormGroup;\n\n  p: Poll;\n  did: string;\n  request: del_request_t;\n  private_key: string;\n  agreement: del_agreement_t;\n  delegation_link: string;\n  message_title: string;\n  message_body: string;\n  mailto_url: string;\n\n  constructor(\n    private popover: PopoverController,\n    public formBuilder: UntypedFormBuilder, \n    public translate: TranslateService,\n    public G: GlobalService) { \n  }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.can_use_web_share = (typeof navigator.share === \"function\");\n    this.can_share = Capacitor.isNativePlatform() || this.can_use_web_share;\n    this.formGroup = this.formBuilder.group({\n      delegate_nickname: new UntypedFormControl('', Validators.required),\n      from: new UntypedFormControl(this.G.S.email)\n    });\n    // TODO: what if already some delegation active or pending?\n    // prepare a new delegation:\n    [this.p, this.did, this.request, this.private_key, this.agreement] = this.G.Del.prepare_delegation(this.parent.pid);\n    // TODO: make indentation in body work:\n    this.message_title = this.translate.instant('delegation-request.message-subject', {due: this.G.D.format_date(this.p.due)});\n    this.update_request();\n    this.ready = true;\n  }\n\n  @ViewChild('focus_element', { static: false }) focus_element: IonInput;\n\n  ionViewDidEnter() {\n    setTimeout(() => this.focus_element.setFocus(), 100);\n  }\n\n  delegate_nickname_changed() {\n    const delegate_nickname = this.formGroup.get('delegate_nickname').value;\n    this.G.D.setp(this.p.pid, \"del_nickname.\" + this.did, delegate_nickname);\n    this.update_request();\n  }\n\n  from_changed() {\n    const from = this.formGroup.get('from').value;\n    this.G.D.setp(this.p.pid, \"del_from.\" + this.did, from);\n    this.set_delegation_link(from);\n    this.update_request();\n  }\n\n  update_request() {\n    this.G.L.entry(\"DelegationDialogPage.update_request\");\n    this.mailto_url = \"mailto:\" + encodeURIComponent(this.formGroup.get('delegate_nickname').value) + \"?subject=\" + encodeURIComponent(this.message_title) + \"&body=\" + encodeURIComponent(this.message_body); \n  }\n\n  ClosePopover()\n  {\n    this.popover.dismiss();\n  }\n\n  validation_messages = {\n    'delegate_nickname': [\n      { type: 'required', message: 'validation.delegate-nickname-required' },\n    ],\n    'from': []\n  }\n\n  set_delegation_link(from: string) {\n    this.delegation_link = this.G.Del.get_delegation_link(this.parent.pid, this.did, from, this.private_key);\n    this.message_body = (this.translate.instant('delegation-request.message-body-greeting') + \"\\n\\n\" \n                + this.translate.instant('delegation-request.message-body-before-title') + \"\\n\\n\"\n                + String.fromCharCode(160).repeat(4) + this.p.title + \".\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-closes', {due: this.G.D.format_date(this.p.due)}) + \"\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-explanation') + \"\\n\\n\" \n                + this.translate.instant('delegation-request.message-body-before-link') + \"\\n\\n\" \n                + String.fromCharCode(160).repeat(4) + this.delegation_link + \"\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-dont-share') + \"\\n\\n\"\n                + this.translate.instant('delegation-request.message-body-regards'));\n  }\n\n  share_button_clicked() {\n    this.G.L.entry(\"DelegationDialogPage.share_button_clicked\");\n    this.delegate_nickname_changed();\n    this.from_changed();\n    Share.share({\n      title: this.message_title,\n      text: this.message_body,\n//      url: this.delegation_link, // not added since contained in body, otherwise will appear twice...\n      dialogTitle: 'Share vodle delegation link',\n    }).then(res => {\n      this.G.L.info(\"DelegationDialogPage.share_button_clicked succeeded\", res);\n      this.G.Del.after_request_was_sent(this.parent.pid, this.did, this.request, this.private_key, this.agreement);\n      this.popover.dismiss();\n    }).catch(err => {\n      this.G.L.error(\"DelegationDialogPage.share_button_clicked failed\", err);\n    });\n  }\n\n  copy_button_clicked() {\n    this.G.L.entry(\"DelegationDialogPage.copy_button_clicked\");\n    this.delegate_nickname_changed();\n    this.from_changed();\n    window.navigator.clipboard.writeText(this.delegation_link);\n    this.G.Del.after_request_was_sent(this.parent.pid, this.did, this.request, this.private_key, this.agreement);\n    LocalNotifications.schedule({\n      notifications: [{\n        title: this.translate.instant(\"delegation-request.notification-copied-link-title\"),\n        body: this.translate.instant(\"delegation-request.notification-copied-link-body\", \n                                     {nickname: this.formGroup.get('delegate_nickname').value}),\n        id: null\n      }]\n    })\n    .then(res => {\n      this.G.L.trace(\"DelegationDialogPage.copy_button_clicked localNotifications.schedule succeeded:\", res);\n    }).catch(err => {\n      this.G.L.warn(\"DelegationDialogPage.copy_button_clicked localNotifications.schedule failed:\", err);\n    });\n    this.parent.update_delegation_info();\n    this.popover.dismiss();\n    this.G.L.exit(\"DelegationDialogPage.copy_button_clicked\");\n  }\n\n  email_button_clicked(ev: MouseEvent) {\n    this.G.L.entry(\"DelegationDialogPage.email_button_clicked\");\n    this.delegate_nickname_changed();\n    this.from_changed();\n    this.G.Del.after_request_was_sent(this.parent.pid, this.did, this.request, this.private_key, this.agreement);\n    this.parent.update_delegation_info();\n    this.popover.dismiss();\n    this.G.L.exit(\"DelegationDialogPage.email_button_clicked\");\n  }\n  \n  close() {\n    this.popover.dismiss();\n  }\n}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DelegationDialogPage } from './delegation-dialog.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DelegationDialogPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DelegationDialogPageRoutingModule {}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DelegationDialogPageRoutingModule } from './delegation-dialog-routing.module';\n\nimport { DelegationDialogPage } from './delegation-dialog.page';\nexport { DelegationDialogPage } from './delegation-dialog.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    DelegationDialogPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [DelegationDialogPage],\n  exports: [DelegationDialogPage]\n})\nexport class DelegationDialogPageModule {}\n","import { registerPlugin } from '@capacitor/core';\nconst Share = registerPlugin('Share', {\n    web: () => import('./web').then(m => new m.ShareWeb()),\n});\nexport * from './definitions';\nexport { Share };\n"],"x_google_ignoreList":[4]}