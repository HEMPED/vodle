{"version":3,"file":"451.e31e6d7137e65006.js","mappings":"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","names":["i0","ctx_r18","valid","ctx_r20","ctx_r23","ctx_r25","routes","path","component","SettingsPage","constructor","formBuilder","translate","G","this","environment","L","entry","ngOnInit","formGroup","group","email","UntypedFormControl","Validators","pw","password","S","password_regexp","confirm_password","validators","passwords_match","language","theme","default_wap","ionViewWillEnter","D","page","editing_email","editing_password","showing_password","advanced_expanded","notify_of","ionViewDidEnter","ready","onDataReady","onSelectServerReady","select_server","fill_form","ionViewDidLeave","save_state","exit","onDataChange","set_email","c","get","value","set_password","fg","set_language","set_theme","set_default_wap","set_db","db","set_db_from_pid","db_from_pid","set_db_custom_server_url","db_custom_server_url","set_db_custom_password","db_custom_password","preferred_lang","navigator","slice","setValue","langs","includes","selectServerFormGroup","cls","notification_classes","get_notify_of","notify_changed","Object","entries","set_notify_of","trace","selectors","IonInput","SelectServerComponent","IonSelect","SettingsPageRoutingModule","RouterModule","SettingsPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","SharedcomponentsModule","TranslateModule"],"sourceRoot":"webpack:///","sources":["./src/app/settings/settings.page.html","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.page.ts","./src/app/settings/settings.module.ts"],"sourcesContent":["<!--\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<!--\nTODO:\n- save password option\n-->\n\n<ion-header>\n  <ion-toolbar style=\"padding-right:11px;\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title [innerHtml]=\"'settings.-page-title'|translate\"></ion-title>\n    <ion-thumbnail slot=\"end\">\n      <ion-img src=\"./assets/topright_icon.png\"></ion-img>\n    </ion-thumbnail>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *ngIf=\"ready\">\n  <form [formGroup]=\"formGroup\">\n\n    <!--DATA STORAGE:-->\n\n    <ion-item color=\"primary\" [innerHtml]=\"'settings.data-storage'|translate\"> \n    </ion-item>\n    <ion-item>\n      <small [innerHtml]=\"'settings.data-storage-msg'|translate\"></small>\n    </ion-item>\n\n    <ion-grid class=\"ion-no-padding\">\n      <ion-row class=\"ion-no-padding\">\n        <ion-col class=\"ion-no-padding\">\n          <ion-item>\n            <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'email'|translate\"></ion-label>\n            <ion-input \n              formControlName=\"email\" \n              [placeholder]=\"'settings.email-placeholder'|translate\"\n              type=\"text\" inputmode=\"email\" required [maxlength]=\"E.max_len.name\"\n              [readonly]=\"!editing_email\"\n              [style]=\"editing_email\n                    ?'pointer-events:;'\n                    :'pointer-events:none;font-size:smaller;'\"\n              (keydown.enter)=\"editing_email=!formGroup.get('email').valid\"\n              (keydown.tab)=\"editing_email=!formGroup.get('email').valid\"\n              (ionChange)=\"set_email()\" debounce=\"100\">\n            </ion-input>\n            <!--TODO: click OK when hitting enter and valid-->\n          </ion-item>\n        </ion-col>\n        <ion-button fill=\"clear\"\n            tabindex=\"-1\" style=\"padding-top: 10px;\"\n            [disabled]=\"editing_email && !formGroup.get('email').valid\"\n            (click)=\"editing_email=!editing_email\">\n          <!--TODO: give focus to field-->\n          <ion-icon [name]=\"editing_email?'checkmark-outline':'pencil-outline'\"></ion-icon>\n          <span [innerHtml]=\"(editing_email?'OK':'settings.edit')|translate\"></span>\n        </ion-button>\n      </ion-row>\n    </ion-grid>\n    <div class=\"validation-errors\">\n    <ng-container *ngFor=\"let validation of G.S.validation_messages.email\">\n      <div class=\"error-message\" \n          *ngIf=\"formGroup.get('email').hasError(validation.type) \n                  && (formGroup.get('email').dirty || formGroup.get('email').touched)\"\n          [innerHtml]=\"validation.message|translate\">\n      </div>\n    </ng-container>\n    </div>\n\n    <div formGroupName=\"pw\">\n      <ion-grid class=\"ion-no-padding\">\n        <ion-row class=\"ion-no-padding\">\n          <ion-col class=\"ion-no-padding\">\n            <ion-item lines=\"none\">\n              <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'password'|translate\"></ion-label>\n              <ion-input \n                formControlName=\"password\" [maxlength]=\"E.max_len.name\"\n                clearOnEdit=\"false\" clearInput=\"true\"\n                [readonly]=\"!editing_password\"\n                [type]=\"showing_password?'text':'password'\" required \n                [style]=\"editing_password\n                      ?'pointer-events:;'\n                      :'pointer-events:none;font-size:smaller;'\"\n                (ionChange)=\"set_password()\" debounce=\"100\">\n              </ion-input>\n            </ion-item>\n          </ion-col>\n          <ion-buttons>\n            <ion-button \n                tabindex=\"-1\" style=\"padding-top: 15px;\" fill=\"clear\" color=\"primary\" \n                (click)=\"showing_password=!showing_password\">\n              <ion-icon [name]=\"showing_password?'eye-off-outline':'eye-outline'\"></ion-icon>\n              <!--&nbsp;<span [innerHtml]=\"(showing_password?'hide':'show')|translate\"></span>-->\n            </ion-button>\n            <ion-button fill=\"clear\"\n                tabindex=\"-1\" style=\"padding-top: 10px;\" color=\"primary\" \n                (click)=\"editing_password=!editing_password\" \n                [disabled]=\"editing_password && !formGroup.get('pw').valid\">\n              <ion-icon [name]=\"editing_password?'checkmark-outline':'pencil-outline'\"></ion-icon>\n              <!--<span [innerHtml]=\"(editing_password?'OK':'settings.edit')|translate\"></span>-->\n            </ion-button>\n          </ion-buttons>\n        </ion-row>\n      </ion-grid>\n      <div class=\"validation-errors\">\n      <ng-container *ngFor=\"let validation of G.S.validation_messages.password\">\n        <div class=\"error-message\" \n            *ngIf=\"formGroup.get('pw.password').hasError(validation.type) \n                    && (formGroup.get('pw.password').dirty || formGroup.get('pw.password').touched)\"\n            [innerHtml]=\"validation.message|translate\">\n        </div>\n      </ng-container>\n      </div>\n      <ng-container *ngIf=\"editing_password\">\n        <ion-item>\n          <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'retype-password'|translate\"></ion-label>\n          <ion-input \n            formControlName=\"confirm_password\" \n            #input_retype_password \n            [disabled]=\"!editing_password\"\n            clearOnEdit=\"false\" clearInput=\"true\"\n            [type]=\"showing_password?'text':'password'\" required [maxlength]=\"E.max_len.name\" \n            [style]=\"editing_password\n              ?'pointer-events:;'\n              :'pointer-events:none;font-size:smaller;'\"\n            (keydown.enter)=\"editing_password=!formGroup.get('pw').valid;showing_password=formGroup.get('pw').valid?false:showing_password\"\n            (keydown.tab)=\"editing_password=!formGroup.get('pw').valid;showing_password=formGroup.get('pw').valid?false:showing_password\"\n            (ionChange)=\"set_password()\" debounce=\"100\">\n          </ion-input>\n        </ion-item>\n        <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of G.S.validation_messages.passwords_match\">\n          <div class=\"error-message\" \n              *ngIf=\"formGroup.get('pw').hasError('must_match') \n                      && (formGroup.get('pw.confirm_password').dirty || formGroup.get('pw.confirm_password').touched)\"\n              [innerHtml]=\"validation.message|translate\">\n          </div>\n        </ng-container>\n        </div>\n      </ng-container>\n    </div>\n  </form>\n\n  <ion-item \n      [style.display]=\"E.data_service.allow_other_servers?'block':'none'\" \n      color=\"light\" (click)=\"advanced_expanded=!advanced_expanded\">\n    <ion-icon size=\"small\" [name]=\"advanced_expanded?'caret-down-outline':'caret-forward-outline'\" color=\"primary\"></ion-icon>\n    <ion-label>\n      <small [innerHtml]=\"'&nbsp;&nbsp;&nbsp;'+('draftpoll.advanced-settings'|translate)\"></small>\n    </ion-label>\n  </ion-item>\n  <app-select-server #select_server \n    [style.display]=\"(advanced_expanded && E.data_service.allow_other_servers)?'block':'none'\" \n    [page]=\"'settings'\" [page_object]=\"this\">\n  </app-select-server>\n\n  <!--APPEARANCE-->\n\n  <form [formGroup]=\"formGroup\">\n    <ion-item color=\"primary\" [innerHtml]=\"'settings.appearance'|translate\">\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\" color=\"primary\">\n        <ion-icon name=\"language-outline\"></ion-icon>&nbsp;\n        <span [innerHtml]=\"'language'|translate\"></span>\n      </ion-label>\n      <ion-select #ionSelects formControlName=\"language\" \n          [cancelText]=\"'cancel'|translate\" [okText]=\"'OK'|translate\"   \n          (ionChange)=\"set_language()\">\n        <ion-select-option *ngFor=\"let lang of translate.langs\" [value]=\"lang\" [innerHtml]=\"G.S.language_names[lang]\"></ion-select-option>\n      </ion-select>\n    </ion-item>\n  <!--  <ion-item>\n      <ion-label position=\"floating\" color=\"primary\">Theme</ion-label>\n      <ion-select formControlName=\"theme\" \n          [cancelText]=\"'cancel'|translate\" [okText]=\"'OK'|translate\" \n          >\n        <ion-select-option value=\"light\">Light</ion-select-option>\n        <ion-select-option value=\"dark\">Dark</ion-select-option>\n      </ion-select>\n    </ion-item>-->\n\n    <!--BEHAVIOUR-->\n\n    <ion-item color=\"primary\" [innerHtml]=\"'settings.behaviour'|translate\">\n    </ion-item>\n    <ion-item>\n      <ion-label color=\"primary\" position=\"stacked\" style=\"min-height:20px!important;\">\n        <span [innerHtml]=\"'settings.default-wap'|translate\"></span>\n      </ion-label>\n      <ion-range formControlName=\"default_wap\"\n          color=\"vodleblue\" (ionChange)=\"set_default_wap()\"\n          mode=\"md\" pin=\"true\"\n          min=\"0\" max=\"100\" step=\"1\" snaps=\"true\" ticks=\"false\"\n          style=\"--bar-height: 7px; --knob-size: 35px; padding-top:8px; padding-left:0px \" \n          >\n        <ion-label slot=\"start\" style=\"width:25px!important;\"><span style=\"font-size:16px!important\" [innerText]=\"formGroup.get('default_wap').value\"></span></ion-label>\n        <!--\n        <ion-label slot=\"start\">0</ion-label>\n        <ion-label slot=\"end\">100</ion-label>\n        -->\n      </ion-range>\n    </ion-item>\n\n  </form>\n\n  <!--TODO: NOTIFICATIONS\n    - if \"denied\", grey it out and show a message to please grant notifications first.\n  -->\n\n  <ion-item color=\"primary\" [innerHtml]=\"'settings.notifications'|translate\">\n  </ion-item>\n  <ion-item>\n    <ion-checkbox slot=\"start\" [(ngModel)]=\"notify_of.new_option\" (ngModelChange)=\"notify_changed()\"></ion-checkbox><ion-label [innerHtml]=\"'notify_of.new_option'|translate\"></ion-label>\n  </ion-item>\n  <ion-item>\n    <ion-checkbox slot=\"start\" [(ngModel)]=\"notify_of.delegation_accepted\" (ngModelChange)=\"notify_changed()\"></ion-checkbox><ion-label [innerHtml]=\"'notify_of.delegation_accepted'|translate\"></ion-label>\n  </ion-item>\n  <ion-item>\n    <ion-checkbox slot=\"start\" [(ngModel)]=\"notify_of.delegation_declined\" (ngModelChange)=\"notify_changed()\"></ion-checkbox><ion-label [innerHtml]=\"'notify_of.delegation_declined'|translate\"></ion-label>\n  </ion-item>\n  <ion-item>\n    <ion-checkbox slot=\"start\" [(ngModel)]=\"notify_of.poll_closing_soon\" (ngModelChange)=\"notify_changed()\"></ion-checkbox><ion-label [innerHtml]=\"'notify_of.poll_closing_soon'|translate\"></ion-label>\n  </ion-item>\n  <ion-item>\n    <ion-checkbox slot=\"start\" [(ngModel)]=\"notify_of.poll_closed\" (ngModelChange)=\"notify_changed()\"></ion-checkbox><ion-label [innerHtml]=\"'notify_of.poll_closed'|translate\"></ion-label>\n  </ion-item>\n  <!--and:\n  when my vote turns into an abstention\n  when my voting weight changes\n  when my delegate's weight changes\n  when my delegate delegates my ratings further\n  when my delegate changed their ratings\n  -->\n</ion-content>\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit, ViewChild, ViewChildren, QueryList } from '@angular/core';\nimport { Validators, UntypedFormBuilder, UntypedFormGroup, UntypedFormControl, ValidationErrors, AbstractControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { IonInput, IonSelect } from '@ionic/angular';\n\nimport { GlobalService } from \"../global.service\";\nimport { SelectServerComponent } from '../sharedcomponents/select-server/select-server.component';\nimport { environment } from 'src/environments/environment';\n\n/*\nTODO:\n- when changing password or server, alert that user needs to update password or server on other devices as well\n*/\n\n\n// PAGE:\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  // ATTRIBUTES:\n\n  E = environment;\n  \n  // template components:\n\n  @ViewChild(IonInput, { static: false }) input_retype_password: IonInput;\n  @ViewChild(SelectServerComponent, { static: false }) select_server: SelectServerComponent;\n  @ViewChildren(IonSelect) ionSelects: QueryList<IonSelect>;\n\n  // form:\n\n  formGroup: UntypedFormGroup;\n  editing_email: boolean;\n  editing_password: boolean;\n  showing_password: boolean;\n  advanced_expanded: boolean;\n  notify_of: { \n    delegation_accepted?: boolean,\n    delegation_declined?: boolean,\n    new_option?: boolean,\n    poll_closing_soon?:boolean,\n    poll_closed?: boolean\n  };\n\n  // LIFECYCLE:\n\n  ready = false;  \n\n  constructor(\n      public formBuilder: UntypedFormBuilder,\n      public translate: TranslateService,\n      public G: GlobalService) { \n    this.G.L.entry(\"SettingsPage.constructor\");\n  }\n\n  ngOnInit() {\n    this.G.L.entry(\"SettingsPage.ngOnInit\");\n    this.formGroup = this.formBuilder.group({\n      email: new UntypedFormControl('', Validators.compose([Validators.required, Validators.email])),\n      pw: this.formBuilder.group({\n        password: new UntypedFormControl('', Validators.compose([\n          Validators.required,\n          Validators.minLength(8),\n          Validators.pattern(this.G.S.password_regexp)\n        ])),\n        confirm_password: new UntypedFormControl('', Validators.required),\n      }, {\n        validators: [this.G.S.passwords_match]\n      }),\n      language: new UntypedFormControl('', Validators.required),\n      theme: new UntypedFormControl('', Validators.required),\n      default_wap: new UntypedFormControl('')\n    });\n  }\n  \n  ionViewWillEnter() {\n    this.G.L.entry(\"SettingsPage.ionViewWillEnter\");\n    this.G.D.page = this;\n    this.editing_email = false;\n    this.editing_password = false;\n    this.showing_password = false;\n    this.advanced_expanded = false;\n    this.notify_of = {};\n  }\n\n  ionViewDidEnter() {\n    this.G.L.entry(\"SettingsPage.ionViewDidEnter\");\n    if (this.G.D.ready && !this.ready) this.onDataReady();\n  }\n\n  onDataReady() {\n    // called when DataService initialization was slower than view initialization\n    this.G.L.entry(\"SettingsPage.onDataReady\");\n    this.ready = true;\n  }\n\n  onSelectServerReady(select_server:SelectServerComponent) {\n    // called by SelectServerComponent is ready\n    this.select_server = select_server;\n    this.fill_form();\n  }\n\n  ionViewDidLeave() {\n    this.G.L.entry(\"SettingsPage.ionViewDidLeave\");\n    this.G.D.save_state();\n    this.G.L.exit(\"SettingsPage.ionViewDidLeave\");\n  }\n\n  // OTHER HOOKS:\n  \n  // for DataService:\n\n  onDataChange() {\n    // called whenever data stored in database has changed\n    this.G.L.entry(\"SettingsPage.onDataChange\");\n    this.fill_form();\n  }\n\n  // for form actions:\n\n  set_email() {\n    let c = this.formGroup.get('email');\n    if (c.valid) this.G.S.email = c.value; // will trigger data move\n  }\n  set_password() {\n    let fg = this.formGroup.get('pw');\n    if (fg.valid) this.G.S.password = fg.get('password').value; // will trigger data move\n  }\n  set_language() {\n    let c = this.formGroup.get('language');\n    if (c.valid) this.G.S.language = c.value;\n  }\n  set_theme() {\n    let c = this.formGroup.get('theme');\n    if (c.valid) this.G.S.theme = c.value;\n  }\n  set_default_wap() {\n    let c = this.formGroup.get('default_wap');\n    this.G.S.default_wap = c.value;\n  }\n\n  // selectServer component hooks:\n\n  set_db(value: string) {\n    this.G.S.db = value;\n  }\n  set_db_from_pid(value: string) {\n    this.G.S.db_from_pid = value;\n  }\n  set_db_custom_server_url(value: string) {\n    this.G.S.db_custom_server_url = value;\n  }\n  set_db_custom_password(value: string) {\n    this.G.S.db_custom_password = value;\n  }\n\n  // OTHER METHODS:\n\n  private fill_form() {\n    this.G.L.entry(\"SettingsPage.fill_form\");\n    // fill form fields with values from data or defaults\n    const preferred_lang = navigator.language.slice(0,2);\n    this.formGroup.setValue({\n      email: this.G.S.email||'',\n      pw: {\n        password: this.G.S.password||'',\n        confirm_password: this.G.S.password||'',\n      },\n      language: this.G.S.language||(this.translate.langs.includes(preferred_lang)?preferred_lang:'en'),\n      theme: this.G.S.theme||'light',\n      default_wap: this.G.S.default_wap||0\n    });\n    this.select_server.selectServerFormGroup.setValue({\n      db: this.G.S.db||'',\n      db_from_pid: this.G.S.db_from_pid||'',\n      db_custom_server_url: this.G.S.db_custom_server_url||'',\n      db_custom_password: this.G.S.db_custom_password||'',\n    });\n    for (const cls of this.G.S.notification_classes) {\n      this.notify_of[cls] = this.G.S.get_notify_of(cls);\n    }\n  }\n\n  notify_changed() {\n    for (const [cls, value] of Object.entries(this.notify_of)) {\n      this.G.S.set_notify_of(cls, value as boolean);\n      this.G.L.trace(\"SettingsPage.notify_changed\", cls, value);\n    }\n  }\n\n}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\nimport { SharedcomponentsModule } from '../sharedcomponents/sharedcomponents.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    SettingsPageRoutingModule,\n    SharedcomponentsModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n"],"x_google_ignoreList":[]}