{"version":3,"file":"9701.463373d077137f67.js","mappings":"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","names":["i0","ctx_r39","value","ctx_r55","ctx_r59","ctx_r105","i_r68","ctx_r132","ev","key","ctrlKey","shiftKey","metaKey","altKey","DraftpollPage","constructor","router","route","formBuilder","popover","alertCtrl","G","translate","ref","this","environment","Math","max","poll_type","type","message","poll_language","poll_title","poll_desc","poll_url","poll_due_type","poll_due_custom","option_name","option_desc","option_url","L","entry","params","subscribe","pid","pd","JSON","parse","decodeURIComponent","n_options","options","length","ngOnInit","reset","ionViewWillEnter","D","page","ionViewDidEnter","ready","onDataReady","deleted","P","polls","state","info","p","language","title","desc","url","due_type","due_custom","db","db_from_pid","db_custom_server_url","db_custom_password","stage","e","oid","o","Object","entries","push","name","option_stage","warn","Date","expanded","Array","advanced_expanded","formGroup","setValue","S","toISOString","show_details","i","od","add_option_inputs","get","add_option","detectChanges","ionSelects","map","select","type_select","open","MouseEvent","onSelectServerReady","select_server","selectServerFormGroup","ionViewWillLeave","is_test","generate_pid","Poll","set_due","oids","trace","generate_oid","l","Option","ratings","setp","stringify","includes","remove_option","LocalNotifications","notifications","instant","body","id","then","res","catch","err","pids","exit","ionViewDidLeave","save_state","onDataChange","set_poll_type","c","valid","set_poll_language","set_poll_title","set_poll_desc","set_poll_url","set_poll_due_type","set_poll_due_custom","update_ref_date","set_option_name","set_option_desc","set_option_url","set_db","set_db_from_pid","set_db_custom_server_url","set_db_custom_password","set_focus","input_element_id","setTimeout","next_input_element","document","getElementById","setFocus","open_due_select","open_due_custom","changed_poll_type","blur_poll_title","poll_title_onKeydown","is_forward_key","blur_poll_desc","poll_desc_onKeydown","blur_poll_url","poll_url_onKeydown","changed_due_type","changed_poll_due_custom","blur_option_name","option_name_onKeydown","next_option","blur_option_desc","option_desc_onKeydown","blur_option_url","option_url_onKeydown","n","del_poll_dialog","create","buttons","text","role","handler","console","log","del_draft","present","del_option_dialog","del_option","no_more","new_option","showkebap","event","component","DraftpollKebapPage","translucent","showBackdrop","cssClass","componentProps","parent","popoverElement","send4review","import_csv_dialog","header","click","ready_button_clicked","updateValueAndValidity","navigate","group","UntypedFormControl","Validators","urlRegex","allowed_date","bind","delete","import_csv","file","target","files","reader","FileReader","onload","content","result","row","split","cols","slice","indexOf","trim","s","detailstoggle","checked","readAsText","restart_with_data","spec","encodeURIComponent","addControl","unique_name_validator$","existingOptionName$","j","removeControl","pop","now","control","ref_date","past","get_max_due","too_late","last","valueOf","setDate","getDate","E","max_duration_days","currentControlName","valueChanges","pipe","values","optionNameKeys","keys","filter","k","existingOptionNames","forEach","selectors","IonSelect","ElementRef","SelectServerComponent","IonToggle","ctx","routes","path","DraftpollPageRoutingModule","RouterModule","DraftpollPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","SharedcomponentsModule","TranslateModule"],"sourceRoot":"webpack:///","sources":["./src/app/draftpoll/draftpoll.page.html","./src/app/draftpoll/draftpoll.page.ts","./src/app/draftpoll/draftpoll-routing.module.ts","./src/app/draftpoll/draftpoll.module.ts"],"sourcesContent":["<!--\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<ion-header>\n  <ion-toolbar style=\"padding-right:11px;\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title [innerHtml]=\"'draftpoll.-page-title'|translate\"></ion-title>\n    <ion-buttons slot=\"end\" class=\"ion-no-padding ion-no-margin\">\n      <ion-button fill=\"clear\" (click)=\"del_poll_dialog()\" class=\"ion-no-padding ion-no-margin\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n      <ion-button fill=\"clear\" (click)=\"showkebap($event)\" class=\"ion-no-padding ion-no-margin\">\n        <ion-icon ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *ngIf=\"ready\">\n  <form [formGroup]=\"formGroup\">\n\n    <!-- A hidden input needed to enable file upload from the kebap: -->\n    <input hidden id=\"choosefile\" type=\"file\" class=\"file\" (change)=\"import_csv($event)\" />\n\n    <!-- GENERAL POLL INFORMATION: -->\n\n    <!-- Show details button: -->\n    <ion-item color=\"primary\">\n      <ion-label [innerHtml]=\"'draftpoll.general-information'|translate\"></ion-label>\n      <ion-button slot=\"end\" fill=\"clear\" (click)=\"show_details=!show_details\" class=\"ion-no-margin ion-no-padding\">\n        <span style=\"color: white\" [innerHtml]=\"'details'|translate\"></span>\n        <ion-toggle \n          name=\"detail-toggle\" #detailstoggle [checked]=\"show_details\"\n          color=\"light\" style=\"--handle-background: black; padding-right: 0; margin-right: 0;\">\n        </ion-toggle><!--not (click)=\"show_details=!show_details\" because this is caught by the surrounding button!-->\n      </ion-button>\n    </ion-item>\n\n    <!-- Poll type: -->\n    <ion-item [color]=\"stage==0?'warning':''\"><!--stage 0-->\n      <ion-label color=\"primary\" position=\"floating\">\n        <span *ngIf=\"formGroup.get('poll_type').valid\" \n            [class]=\"stage==0?'current-field':''\" \n            ><!--style=\"position:relative;top:3px;z-index:10;\" now in class=poll-type-->\n          <ion-icon class=\"poll-type\"\n            [name]=\"formGroup.get('poll_type').value=='winner'?'trophy':'cut'\"\n            style=\"color:black\">\n          </ion-icon>&nbsp;\n        </span>\n        <span [class]=\"stage==0?'current-field':''\" \n          [innerHtml]=\"'draftpoll.type-label'|translate\">\n        </span>\n      </ion-label>\n      <ion-select \n          formControlName=\"poll_type\" \n          text-wrap autofocus tabindex=\"0\" \n          #ionSelects #type_select  \n          [cancelText]=\"'cancel'|translate\" [okText]=\"'OK'|translate\" \n          (ionChange)=\"set_poll_type();changed_poll_type()\">\n        <ion-select-option text-wrap value=\"winner\" [innerHtml]=\"'draftpoll.type-winner'|translate\"></ion-select-option>\n        <ion-select-option text-wrap value=\"share\" [innerHtml]=\"'draftpoll.type-share'|translate\"></ion-select-option>\n      </ion-select>\n    </ion-item>\n    <div class=\"validation-errors\">\n      <ng-container *ngFor=\"let validation of validation_messages.poll_type\">\n        <div class=\"error-message\" \n            *ngIf=\"formGroup.get('poll_type').hasError(validation.type) \n                    && (formGroup.get('poll_type').dirty || formGroup.get('poll_type').touched)\"\n            [innerHtml]=\"validation.message|translate\">\n        </div>\n      </ng-container>\n    </div>\n\n    <!-- Poll title: -->\n    <ng-container *ngIf=\"stage>0\">\n      <ion-item [color]=\"stage==1?'warning':'light'\"><!--stage 1-->\n        <ion-label position=\"floating\" color=\"primary\">\n          <span [class]=\"stage==1?'current-field':''\" \n            [innerHtml]=\"'draftpoll.title-label'|translate\">\n          </span>\n        </ion-label>\n        <ion-input  \n          id=\"input_poll_title\"\n          formControlName=\"poll_title\" [maxlength]=\"E.max_len.title\"\n          [placeholder]=\"'draftpoll.title-placeholder'|translate\"\n          tabindex=\"0\" type=\"text\" required inputmode=\"text\"\n          style=\"font-weight: bold; font-style: italic; font-size: larger;\"\n          (ionChange)=\"set_poll_title();\" debounce=\"100\"\n          (keydown)=\"poll_title_onKeydown($event)\"\n          (ionBlur)=\"blur_poll_title()\">\n        </ion-input>      \n      </ion-item>\n      <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of validation_messages.poll_title\">\n          <div class=\"error-message\" \n              *ngIf=\"formGroup.get('poll_title').hasError(validation.type) \n                      && (formGroup.get('poll_title').dirty || formGroup.get('poll_title').touched)\"\n              [innerHtml]=\"validation.message|translate\">\n          </div>\n        </ng-container>\n      </div>\n    </ng-container>  \n    \n    <!-- Poll description: -->\n    <ng-container *ngIf=\"stage>1 && show_details\">\n      <ion-item [color]=\"stage==2?'warning':''\"><!--stage 2-->\n        <ion-label position=\"floating\" color=\"primary\">\n          <span [class]=\"stage==2?'current-field':''\" \n            [innerHtml]=\"'draftpoll.desc-label'|translate\">\n          </span>\n        </ion-label>\n        <!--TODO: textarea too large (mostly white) in Firefox when desc is long -->\n        <ion-textarea \n          id=\"input_poll_desc\"\n          formControlName=\"poll_desc\" [maxlength]=\"E.max_len.desc\"\n          [placeholder]=\"'draftpoll.desc-placeholder'|translate\"\n          autofocus tabindex=\"0\" rows=\"1\" auto-grow type=\"text\" inputmode=\"text\" \n          style=\"font-style: italic;\"\n          (ionChange)=\"set_poll_desc()\" debounce=\"100\"\n          (keydown)=\"poll_desc_onKeydown($event)\"\n          (ionBlur)=\"blur_poll_desc()\">\n        </ion-textarea>\n        <ion-button \n          *ngIf=\"stage==2 && [null,''].includes(formGroup.get('poll_desc').value)\" \n          tabindex=\"-1\" color=\"primary\" slot=\"end\" class=\"skip-button\" \n          [innerHtml]=\"'skip'|translate\">\n        </ion-button><!--FIXME: no functionality?-->\n      </ion-item>\n      <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of validation_messages.poll_desc\">\n          <div class=\"error-message\" \n              *ngIf=\"formGroup.get('poll_desc').hasError(validation.type) \n                      && (formGroup.get('poll_desc').dirty || formGroup.get('poll_desc').touched)\"\n              [innerHtml]=\"validation.message|translate\">\n          </div>\n        </ng-container>\n      </div>\n    </ng-container>    \n\n    <!-- Poll URL: -->\n    <ng-container *ngIf=\"stage>2 && show_details\">\n      <ion-item [color]=\"stage==3?'warning':''\"><!--stage 3-->\n        <ion-label position=\"floating\" color=\"primary\">\n          <span [class]=\"stage==3?'current-field':''\" \n            [innerHtml]=\"'draftpoll.url-label'|translate\">\n          </span>\n        </ion-label>\n        <ion-input \n          id=\"input_poll_url\"\n          formControlName=\"poll_url\"\n          [placeholder]=\"'draftpoll.url-placeholder'|translate\"\n          tabindex=\"0\" type=\"text\" inputmode=\"url\" [maxlength]=\"E.max_len.url\"\n          style=\"font-size:smaller;word-wrap:normal;\"\n          (ionChange)=\"set_poll_url()\" debounce=\"100\"\n          (keydown)=\"poll_url_onKeydown($event)\"\n          (ionBlur)=\"blur_poll_url()\">\n        </ion-input>\n        <ion-button \n          *ngIf=\"stage==3 && [null,''].includes(formGroup.get('poll_url').value)\" \n          tabindex=\"-1\" color=\"primary\" slot=\"end\" class=\"skip-button\"\n          [innerHtml]=\"'skip'|translate\">\n        </ion-button>\n        <ion-button \n            *ngIf=\"formGroup.get('poll_url').valid && ![null,''].includes(formGroup.get('poll_url').value)\" \n            tabindex=\"-1\" fill=\"clear\" slot=\"end\" class=\"skip-button\" \n            (click)=\"G.open_url_in_new_tab(formGroup.get('poll_url').value)\">\n          <span [innerHtml]=\"'test'|translate\"></span>&nbsp;\n          <ion-icon name=\"open-outline\"></ion-icon>\n        </ion-button>\n      </ion-item>\n      <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of validation_messages.poll_url\">\n          <div class=\"error-message\" \n              *ngIf=\"formGroup.get('poll_url').hasError(validation.type) \n                      && (formGroup.get('poll_url').dirty || formGroup.get('poll_url').touched)\"\n              [innerHtml]=\"validation.message|translate\">\n          </div>\n        </ng-container>\n      </div>\n    </ng-container>    \n\n    <!-- Due type: -->\n    <ng-container *ngIf=\"stage>3\">\n      <ion-item [color]=\"stage==4?'warning':''\"><!--stage 4-->\n        <ion-label color=\"primary\" position=\"floating\">\n          <span [class]=\"stage==4?'current-field':''\" \n            [innerHtml]=\"'draftpoll.due-type-label'|translate\">\n          </span>\n        </ion-label>\n        <ion-select\n            id=\"due_select\" #due_select\n            formControlName=\"poll_due_type\" \n            [cancelText]=\"'cancel'|translate\" [okText]=\"'OK'|translate\" \n            #ionSelects tabindex=\"0\" required \n            (ionChange)=\"set_poll_due_type();changed_due_type()\">\n          <ion-select-option value=\"custom\" [innerHtml]=\"'draftpoll.due-type-custom'|translate\"></ion-select-option>\n          <ion-select-option value=\"10min\" [innerHtml]=\"'draftpoll.due-type-10min'|translate\"></ion-select-option>\n          <ion-select-option value=\"hour\" [innerHtml]=\"'draftpoll.due-type-hour'|translate\"></ion-select-option>\n          <ion-select-option value=\"24hr\" [innerHtml]=\"'draftpoll.due-type-24hr'|translate\"></ion-select-option>\n          <ion-select-option value=\"midnight\" [innerHtml]=\"'draftpoll.due-type-midnight'|translate\"></ion-select-option>\n          <ion-select-option value=\"tomorrow-noon\" [innerHtml]=\"'draftpoll.due-type-tomorrow-noon'|translate\"></ion-select-option>\n          <ion-select-option value=\"tomorrow-night\" [innerHtml]=\"'draftpoll.due-type-tomorrow-night'|translate\"></ion-select-option>\n          <ion-select-option value=\"friday-noon\" [innerHtml]=\"'draftpoll.due-type-friday-noon'|translate\"></ion-select-option>\n          <ion-select-option value=\"sunday-night\" [innerHtml]=\"'draftpoll.due-type-sunday-night'|translate\"></ion-select-option>\n          <ion-select-option value=\"week\" [innerHtml]=\"'draftpoll.due-type-week'|translate\"></ion-select-option>\n          <ion-select-option value=\"two-weeks\" [innerHtml]=\"'draftpoll.due-type-two-weeks'|translate\"></ion-select-option>\n          <ion-select-option value=\"four-weeks\" [innerHtml]=\"'draftpoll.due-type-four-weeks'|translate\"></ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <!-- Custom due date: -->\n      <ng-container *ngIf=\"formGroup.get('poll_due_type').value=='custom'\">\n        <ion-item [color]=\"stage==5?'warning':''\"><!--stage 5-->\n          <ion-label color=\"primary\">\n            <span [class]=\"stage==5?'current-field':''\" \n              [innerHtml]=\"'draftpoll.due-datetime-label'|translate\">\n            </span>\n          </ion-label>\n          <ion-datetime-button datetime=\"poll_due_custom\"></ion-datetime-button>\n          <ion-modal [keepContentsMounted]=\"true\">\n            <ng-template>\n              <ion-datetime \n                id=\"poll_due_custom\"\n                tabindex=\"0\"\n                formControlName=\"poll_due_custom\" \n                [min]=\"G.P.ref_date.toISOString()\"\n                [max]=\"get_max_due().toISOString()\"\n                (ionClick)=\"G.P.update_ref_date();\"\n                (ionChange)=\"set_poll_due_custom();changed_poll_due_custom()\"\n                [cancelText]=\"'cancel'|translate\"\n                [doneText]=\"'OK'|translate\"\n                [locale]=\"G.S.language\"\n                [firstDayOfWeek]=\"'-parameters.first-day-of-week'|translate\"\n                >\n              </ion-datetime>\n            </ng-template>\n          </ion-modal>\n        </ion-item>\n        <div class=\"validation-errors\">\n          <ng-container *ngFor=\"let validation of validation_messages.poll_due_custom\">\n            <div class=\"error-message\" \n                *ngIf=\"(!formGroup.get('poll_due_custom').valid) \n                        && (formGroup.get('poll_due_custom').dirty || formGroup.get('poll_due_custom').touched)\"\n                [innerHtml]=\"validation.message|translate\">\n            </div>\n          </ng-container>\n        </div>\n      </ng-container>\n    </ng-container>    \n\n    <!-- ADVANCED SETTINGS: -->\n\n    <ion-item *ngIf=\"stage>5\" [color]=\"advanced_expanded?'light':''\" (click)=\"advanced_expanded=!advanced_expanded\">\n      <ion-icon \n        [name]=\"advanced_expanded?'caret-down-outline':'caret-forward-outline'\" \n        size=\"small\" color=\"primary\">\n      </ion-icon>\n      <ion-label>\n        <small [innerHtml]=\"'&nbsp;&nbsp;&nbsp'+('draftpoll.advanced-settings'|translate)\"></small>\n      </ion-label>\n    </ion-item>\n\n    <!-- Language: -->\n    <ion-item [style.display]=\"(stage>5) && advanced_expanded?'block':'none'\">\n      <ion-label position=\"floating\" color=\"primary\">\n        <ion-icon name=\"language-outline\"></ion-icon>&nbsp;\n        <span [innerHtml]=\"'draftpoll.language'|translate\"></span>\n      </ion-label>\n      <ion-select #ionSelects formControlName=\"poll_language\" (ionChange)=\"set_poll_language()\"\n        [cancelText]=\"'cancel'|translate\" [okText]=\"'OK'|translate\" \n        style=\"font-size: smaller\">\n        <ion-select-option *ngFor=\"let lang of translate.langs\" [value]=\"lang\" [innerHtml]=\"G.S.language_names[lang]\"></ion-select-option>\n      </ion-select>\n    </ion-item>\n\n    <!-- Server: -->\n    <app-select-server #select_server\n      *ngIf=\"E.data_service.allow_other_servers\" \n      [page_object]=\"this\" [page]=\"'draftpoll'\"\n      [style.display]=\"(stage>5) && advanced_expanded?'block':'none'\">\n    </app-select-server><!--stage 7-->\n  \n    <!-- OPTIONS: -->\n\n    <ng-container *ngIf=\"stage>5\"><!--stage 6-->\n      <ion-item color=\"primary\">\n        <ion-label [innerHtml]=\"(formGroup.get('poll_type').value=='winner' ? 'options' : 'possible-targets')|translate\"></ion-label>\n      </ion-item>\n\n      <!-- LOOP OVER OPTIONS: -->\n\n      <div *ngFor=\"let item of [].constructor(n_options); let i = index\">\n\n        <!-- Option name: -->\n        <ion-item [color]=\"(i == n_options-1 && option_stage==0)?'warning':'light'\"><!--option_stage 0-->\n          <ion-button tabindex=\"-1\" \n              *ngIf=\"show_details\" \n              fill=\"clear\" slot=\"start\" class=\"field-expander\"\n              (click)=\"expanded[i]=!expanded[i]\">\n            <ion-icon [name]=\"expanded[i]?'caret-down-outline':'caret-forward-outline'\" slot=\"icon-only\"></ion-icon>\n          </ion-button>\n          <ion-label position=\"floating\" color=\"primary\">\n            <span [class]=\"option_stage==0?'current-field':''\"\n              [innerHtml]=\"\n                (formGroup.get('poll_type').value=='winner' \n                ? 'draftpoll.option-name-label' \n                : 'draftpoll.target-name-label') | translate\">\n            </span>\n          </ion-label>\n          <ion-input \n            [id]=\"'input_option_name'+i\"\n            [formControlName]=\"'option_name'+i\" \n            [placeholder]=\"(formGroup.get('poll_type').value == 'winner' \n                            ? 'draftpoll.option-name-placeholder' \n                            : 'draftpoll.target-name-placeholder') | translate\"\n            type=\"text\" required tabindex=\"0\" [maxlength]=\"E.max_len.name\"\n            style=\"font-weight: bold; font-style: italic;\"\n            (ionChange)=\"set_option_name(i)\" debounce=\"100\"\n            (keydown)=\"option_name_onKeydown($event, i, show_details)\"\n            (ionBlur)=\"blur_option_name(i)\">\n          </ion-input>      \n          <ion-button \n            *ngIf=\"i == n_options-1 && i > 1 && (formGroup.get('option_name'+i).value||'')==''\" \n            [innerHtml]=\"'draftpoll.no-more-button'|translate\"\n            color=\"primary\" slot=\"end\" class=\"skip-button\" tabindex=\"0\" \n            (click)=\"no_more()\">\n          </ion-button>\n          <ion-button \n              *ngIf=\"n_options>1 && !(i == n_options-1 && i > 1 && (formGroup.get('option_name'+i).value||'')=='')\" \n              fill=\"clear\" color=\"primary\" slot=\"end\" class=\"skip-button\" tabindex=\"-1\" \n              (click)=\"del_option_dialog(i)\">\n            <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n          </ion-button>\n        </ion-item>\n        <div class=\"validation-errors\">\n          <ng-container *ngFor=\"let validation of validation_messages.option_name\">\n            <div class=\"error-message\" \n                *ngIf=\"formGroup.get('option_name'+i).hasError(validation.type) \n                        && (formGroup.get('option_name'+i).dirty || formGroup.get('option_name'+i).touched)\"\n                [innerHtml]=\"validation.message|translate\">\n            </div>\n          </ng-container>\n        </div>\n\n        <!-- Option description: -->\n        <ng-container *ngIf=\"option_stage>0 && expanded[i]\">\n          <ion-item [color]=\"i == n_options-1 && option_stage==1?'warning':''\"><!--option_stage 1-->\n            <ion-label position=\"floating\" color=\"primary\">\n              <span [class]=\"option_stage==1?'current-field':''\" \n                [innerHtml]=\"'draftpoll.option-desc-label'|translate\">\n              </span>\n            </ion-label>\n            <ion-textarea \n              [id]=\"'input_option_desc'+i\"\n              [formControlName]=\"'option_desc'+i\" tabindex=\"0\" \n              [placeholder]=\"'draftpoll.option-desc-placeholder'|translate:{name:formGroup.get('option_name'+i).value}\"\n              rows=\"1\" auto-grow type=\"text\" [maxlength]=\"E.max_len.desc\"\n              style=\"font-style: italic;\"\n              (ionChange)=\"set_option_desc(i)\" debounce=\"100\"\n              (keydown)=\"option_desc_onKeydown($event, i)\"\n              (ionBlur)=\"blur_option_desc(i)\">\n            </ion-textarea>\n            <ion-button \n              *ngIf=\"option_stage==1 && i == n_options-1 && [null,''].includes(formGroup.get('option_desc'+i).value)\" \n              color=\"primary\" slot=\"end\" class=\"skip-button\" tabindex=\"-1\" \n              [innerHtml]=\"'skip'|translate\">\n            </ion-button>\n          </ion-item>\n          <div class=\"validation-errors\">\n            <ng-container *ngFor=\"let validation of validation_messages.option_desc\">\n              <div class=\"error-message\" \n                  *ngIf=\"formGroup.get('option_desc'+i).hasError(validation.type) \n                          && (formGroup.get('option_desc'+i).dirty || formGroup.get('option_desc'+i).touched)\"\n                [innerHtml]=\"validation.message|translate\">\n              </div>\n            </ng-container>\n          </div>\n        </ng-container>  \n\n        <!-- Option URL: -->\n        <ng-container *ngIf=\"option_stage>1 && expanded[i]\">\n          <ion-item [color]=\"i == n_options-1 && option_stage==2?'warning':''\"><!--option_stage 2-->\n            <ion-label position=\"floating\" color=\"primary\">\n              <span [class]=\"option_stage==2?'current-field':''\" \n                [innerHtml]=\"'draftpoll.option-url-label'|translate\">\n              </span>\n            </ion-label>\n            <ion-input \n              [id]=\"'input_option_url'+i\"\n              [formControlName]=\"'option_url'+i\" \n              [placeholder]=\"'draftpoll.option-url-placeholder'|translate:{name:formGroup.get('option_name'+i).value}\"\n              type=\"text\" inputmode=\"url\" tabindex=\"0\" [maxlength]=\"E.max_len.url\"\n              style=\"font-size: smaller;\"\n              (ionChange)=\"set_option_url(i)\" debounce=\"100\"\n              (keydown)=\"option_url_onKeydown($event, i)\"\n              (ionBlur)=\"blur_option_url(i)\">\n            </ion-input>\n            <ion-button \n              *ngIf=\"option_stage==2 && i == n_options-1 && [null,''].includes(formGroup.get('option_url'+i).value)\" \n              [innerHtml]=\"'skip'|translate\" tabindex=\"-1\" \n              color=\"primary\" slot=\"end\" class=\"skip-button\">\n            </ion-button>\n            <ion-button \n                *ngIf=\"formGroup.get('option_url'+i).valid && ![null,''].includes(formGroup.get('option_url'+i).value)\" \n                fill=\"clear\" slot=\"end\" class=\"skip-button\" tabindex=\"-1\" \n                (click)=\"G.open_url_in_new_tab(formGroup.get('option_url'+i).value)\">\n              <span [innerHtml]=\"'test'|translate\"></span>&nbsp;\n              <ion-icon name=\"open-outline\"></ion-icon>\n            </ion-button>\n          </ion-item>\n          <div class=\"validation-errors\">\n            <ng-container *ngFor=\"let validation of validation_messages.option_url\">\n              <div class=\"error-message\" \n                  *ngIf=\"formGroup.get('option_url'+i).hasError(validation.type) \n                          && (formGroup.get('option_url'+i).dirty || formGroup.get('option_url'+i).touched)\"\n                [innerHtml]=\"validation.message|translate\">\n              </div>\n            </ng-container>\n          </div>\n        </ng-container>    \n      </div>\n\n      <!-- (END OF LOOP OVER OPTIONS) -->\n\n      <!-- Add option button: -->\n      <ion-item lines=\"none\" *ngIf=\"option_stage==10 && formGroup.get('option_url'+(n_options-1)).valid\"\n          class=\"ion-no-padding\" style=\"padding-left: 5px; padding-top: 5px;\">\n        <ion-fab-button size=\"small\" (click)=\"new_option()\" fill=\"clear\" color=\"primary\">\n          <ion-icon name=\"add\"></ion-icon>\n        </ion-fab-button>\n        <ion-button tabindex=\"-1\" \n          [innerHtml]=\"(formGroup.get('poll_type').value=='winner' ? 'add-option' : 'add-target')|translate\"\n          class=\"ion-no-padding ion-no-margin\" fill=\"clear\" (click)=\"new_option()\"> \n        </ion-button>\n      </ion-item>\n      <ion-item lines=\"none\">\n        <small [innerHtml]=\"\n          (formGroup.get('poll_type').value == 'winner' \n          ? 'draftpoll.please-list-options-explanation' \n          : 'draftpoll.please-list-targets-explanation') | translate\">\n        </small>\n      </ion-item>\n    </ng-container>\n\n    <!-- FOOTER: -->\n\n    <ion-item \n        *ngIf=\"formGroup.get('poll_title').valid\" \n        lines=\"none\" class=\"ion-text-end\" text-wrap>\n      <ion-label style=\"line-height:1.0;\">\n        <small [innerHtml]=\"'('+('draftpoll.draft-saved'|translate)+')'\"></small>\n      </ion-label>\n      <ion-button size=\"large\" color=\"primary\" slot=\"end\" [disabled]=\"n_options<2 || !formGroup.valid\" \n          shape=\"round\" tabindex=\"0\" \n          (click)=\"ready_button_clicked()\">\n        <ion-icon name=\"checkmark\"></ion-icon>&nbsp;\n        <span [innerHtml]=\"'ready'|translate\"></span>\n      </ion-button>\n    </ion-item>\n\n  </form>\n</ion-content>\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\n/*\nTODO:\n- fix next field not showing in android app\n- fix wrong option_stage when returning, make \"skip\" button work properly\n- make tab key autofocus work properly\n*/\n\nimport { Component, OnInit, ViewChild, ViewChildren, ElementRef, QueryList, ChangeDetectorRef } from '@angular/core';\nimport { Validators, UntypedFormBuilder, UntypedFormGroup, UntypedFormControl, ValidationErrors, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { PopoverController, IonSelect, IonToggle, AlertController, IonInput, IonDatetime } from '@ionic/angular';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\nimport { DraftpollKebapPage } from '../draftpoll-kebap/draftpoll-kebap.module';  \n\nimport { GlobalService } from \"../global.service\";\nimport { Poll, Option } from \"../poll.service\";\nimport { SelectServerComponent } from '../sharedcomponents/select-server/select-server.component';\nimport { environment } from 'src/environments/environment';\n\nimport { unique_name_validator$ } from '../sharedcomponents/unique-form-validator';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators'\n\ntype option_data_t = { oid?, name?, desc?, url?, ratings? };\n\nfunction is_forward_key(ev: KeyboardEvent) {\n  return (ev.key == \"Tab\" || ev.key == \"Enter\") && !ev.ctrlKey && !ev.shiftKey && !ev.metaKey && !ev.altKey;\n}\n\n@Component({\n  selector: 'app-draftpoll',\n  templateUrl: './draftpoll.page.html',\n  styleUrls: ['./draftpoll.page.scss'],\n})\nexport class DraftpollPage implements OnInit {\n\n  E = environment;\n  \n  // page template elements:\n  \n  @ViewChild(IonSelect, { static: false, read: ElementRef }) type_select_ref: ElementRef;\n  @ViewChild(IonSelect, { static: false }) type_select: IonSelect;\n  @ViewChild(IonSelect, { static: false }) due_select: IonSelect;\n  @ViewChild(SelectServerComponent, { static: false }) select_server: SelectServerComponent;\n  @ViewChild(IonToggle, { static: false }) detailstoggle: IonToggle;\n  @ViewChildren(IonSelect) ionSelects: QueryList<IonSelect>;\n\n  // form:\n\n  formGroup: UntypedFormGroup;\n  stage: number\n  option_stage: number;\n  expanded: Array<boolean>;\n  advanced_expanded: boolean;\n  deleted: boolean;\n\n  // draft poll data:\n\n  pd: { \n    pid?,\n    is_test?,\n    type?, language?, \n    title?, desc?, url?, \n    due_type?, due_custom?, \n    db?, db_from_pid?, db_custom_server_url?, db_custom_password?,\n    options?: option_data_t[] \n  };\n  get n_options() { return (this.pd.options||[]).length; }\n\n  // objects:\n\n  pid: string;\n\n  // other:\n\n  max = Math.max; // function used frequently in template\n\n  // LIFECYCLE:\n\n  show_details = false;\n  ready = false;  \n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    public formBuilder: UntypedFormBuilder, \n    private popover: PopoverController,\n    public alertCtrl: AlertController,\n    public G: GlobalService,\n    public translate: TranslateService,\n    private ref: ChangeDetectorRef\n  ) { \n    this.G.L.entry(\"DraftpollPage.constructor\");\n    this.route.params.subscribe( params => { \n      this.pid = params['pid'];\n      this.pd = JSON.parse(decodeURIComponent(params['pd']||\"{}\"));\n    } );\n  }\n  \n  ngOnInit() {\n    this.G.L.entry(\"DraftpollPage.ngOnInit\");\n    this.reset();\n  }\n\n  ionViewWillEnter() {\n    this.G.L.entry(\"DraftpollPage.ionViewWillEnter\");\n    this.G.D.page = this;\n    this.reset();\n  }\n\n  ionViewDidEnter() {\n    this.G.L.entry(\"DraftpollPage.ionViewDidEnter\");\n    if (this.G.D.ready && !this.ready) this.onDataReady();\n  }\n\n  onDataReady() {\n    this.G.L.entry(\"DraftpollPage.onDataReady\");\n    this.deleted = false;\n    if (!this.pid) {\n      this.stage = 0;\n      if (!this.pd) {\n        this.G.L.info(\"DraftpollPage editing new draft\");\n        this.pd = { db:'default' };\n      } else {\n        this.G.L.info(\"DraftpollPage editing draft with data\", this.pd);\n        this.pd.due_custom = (this.pd.due_custom||'')!=''?(new Date(this.pd.due_custom)):null;\n        this.pd.db = this.pd.db||'default';\n      }\n    } else if (this.pid in this.G.P.polls) {\n      if (this.G.P.polls[this.pid].state == 'draft') {\n        this.G.L.info(\"DraftpollPage editing existing draft\", this.pid);\n        // read data:\n        let p = this.G.P.polls[this.pid];\n        this.pd = { \n          pid:p.pid,\n          type:p.type, language:p.language,\n          title:p.title, desc:p.desc, url:p.url, \n          due_type:p.due_type, due_custom:p.due_custom, \n          db:p.db, db_from_pid:p.db_from_pid, db_custom_server_url:p.db_custom_server_url, db_custom_password:p.db_custom_password,\n          options: [] \n        };\n        this.stage = !(!!p.due_custom)?6:p.due_type?6:p.url!=''?4:p.desc!=''?3:p.title!=''?4:p.type?1:0;\n        for (let [oid, o] of Object.entries(p.options)) {\n          this.pd.options.push({ oid:oid, name:o.name, desc:o.desc, url:o.url });\n          this.stage = 6;\n          this.option_stage = 10;\n        }\n      } else {\n        this.G.L.warn(\"DraftpollPage non-draft pid ignored, generating new draft\");\n      }\n    } else {\n      this.G.L.warn(\"DraftpollPage unknown pid ignored, generating new draft\");\n    }\n    this.expanded = Array<boolean>(this.n_options);\n    this.advanced_expanded = false;\n    // fill form:\n    if (this.pd) {\n      this.formGroup.setValue({ \n        poll_type: this.pd.type||'',\n        poll_language: (this.pd.language||'')!=''?this.pd.language:this.G.S.language,\n        poll_title: this.pd.title||'', \n        poll_desc: this.pd.desc||'',\n        poll_url: this.pd.url||'', \n        poll_due_type: this.pd.due_type||'', \n        poll_due_custom: (!this.pd.due_custom)?'':this.pd.due_custom.toISOString(),\n      });\n      if (this.pd.language||this.pd.db_from_pid||this.pd.db_custom_server_url) {\n        this.advanced_expanded = true;\n      }\n      if (this.pd.desc||this.pd.url) {\n        this.show_details = true;\n      }\n      if (!this.pd.options) {\n        this.pd.options = [];\n      }\n      for (let [i, od] of this.pd.options.entries()) {\n        this.add_option_inputs(i);\n        this.formGroup.get('option_name'+i).setValue(od.name); \n        this.formGroup.get('option_desc'+i).setValue(od.desc); \n        this.formGroup.get('option_url'+i).setValue(od.url); \n        this.stage = 6;\n        this.option_stage = 10;\n        if (od.desc||od.url) {\n          this.show_details = true;\n        }\n      }\n    }\n    if (this.n_options==0) {\n      this.add_option({});\n      this.option_stage = 0;\n    }\n    // show the page:\n    this.ready = true;\n    // find select-server component and register us with it:\n    this.ref.detectChanges();\n    // make sure select-element values are translated properly:\n    this.ionSelects.map((select) => select.value = select.value);\n    // open the type selector?:\n    if (!this.formGroup.get('poll_type').value) {\n      this.type_select.open(new MouseEvent(\"click\"));\n    }\n  }\n\n  onSelectServerReady(select_server:SelectServerComponent) {\n    // called by SelectServerComponent is ready\n    this.select_server = select_server;\n    if (this.pd) {\n      this.select_server.selectServerFormGroup.setValue({\n        db: this.pd.db||'',\n        db_from_pid: this.pd.db_from_pid||'',\n        db_custom_server_url: this.pd.db_custom_server_url||'',\n        db_custom_password: this.pd.db_custom_password||'',\n      });\n    }\n  }\n\n  ionViewWillLeave() {\n    this.G.L.entry(\"DraftpollPage.ionViewWillLeave\");\n    // TODO: close/dismiss this.type_select, which is a popover\n    if ((this.pd.title||'')=='') {\n      this.G.L.info(\"DraftpollPage.ionViewWillLeave not saving empty title draft\");\n      // TODO: notify of deleted draft\n    } else if (!this.deleted) {\n      this.G.L.info(\"DraftpollPage.ionViewWillLeave saving draft\");\n      var p;\n      if (!this.pid) {\n        this.pid = (this.pd.is_test == true ? 'TEST_' : '') + this.G.P.generate_pid();\n      }\n      if (!(this.pid in this.G.P.polls)) {\n        // generate new poll object:\n        p = new Poll(this.G, this.pid);\n      } else {\n        p = this.G.P.polls[this.pid];\n      }\n      p.state = 'draft';\n      if (this.pd.is_test == true) {\n        p.is_test = true;\n      }\n      p.type = this.pd.type;\n      p.language = this.pd.language;\n      p.title = this.pd.title;\n      p.desc = this.pd.desc;\n      p.url = this.pd.url;\n      p.due_type = this.pd.due_type;\n      p.due_custom = this.pd.due_custom;\n      p.set_due();\n      p.db = this.pd.db;\n      p.db_from_pid = this.pd.db_from_pid;\n      p.db_custom_server_url = this.pd.db_custom_server_url;\n      p.db_custom_password = this.pd.db_custom_password;\n      let oids = [];\n      for (let od of this.pd.options) {\n        this.G.L.trace(\" storing option data\", od);\n        if ((od.name||'')!='') {\n          var o: Option;\n          if (!od.oid) {\n            od.oid = this.G.P.generate_oid(this.pid);\n            this.G.L.trace(\"  generated new oid\", od.oid);\n          }\n          if (!(od.oid in p.options)) {\n            // generate new options object:\n            this.G.L.trace(\"  creating new Option object\");\n            o = new Option(this.G, p, od.oid, od.name, od.desc, od.url);\n          } else {\n            o = p.options[od.oid];\n            this.G.L.trace(\"  reusing Option object\", o);\n            o.name = od.name;\n            o.desc = od.desc;\n            o.url = od.url;\n          }\n          oids.push(od.oid);\n          if (p.is_test && !!od.ratings) {\n            // mark poll as test poll and store ratings of simulated voters:\n            this.G.D.setp(this.pid, 'simulated_ratings.'+od.oid, JSON.stringify(od.ratings));\n          }\n        }\n      }\n      this.G.L.trace(\" oids now\", oids);\n      // remove deleted options from p:\n      for (let [oid, o] of Object.entries(p.options)) {\n        if (!oids.includes(oid)) {\n          this.G.L.trace(\" removing old option\", oid);\n          p.remove_option(oid);\n        }\n      }\n      // send local notification:\n      LocalNotifications.schedule({\n        notifications: [{\n          title: this.translate.instant(\"draftpoll.notification-saved-title\"),\n          body: p.title,\n          id: 1 // TODO: increment or leave out?\n        }]\n      })\n      .then(res => {\n        this.G.L.trace(\"DraftpollPage.ionViewWillLeave localNotifications.schedule succeeded:\", res);\n      }).catch(err => {\n        this.G.L.warn(\"DraftpollPage.ionViewWillLeave localNotifications.schedule failed:\", err);\n      });\n    }\n    this.G.L.trace(\"DraftpollPage.ionViewWillLeave D.pids:\", [...this.G.D.pids]);\n    this.G.L.exit(\"DraftpollPage.ionViewWillLeave\");\n  }\n\n  ionViewDidLeave() {\n    this.G.L.entry(\"DraftpollPage.ionViewDidLeave\");\n    this.G.D.save_state();\n    this.ready = false; // so that when returning, onDataReady will again be triggered\n    this.G.L.exit(\"DraftpollPage.ionViewDidLeave\");\n  }\n\n  // OTHER HOOKS:\n\n  // for DataService:\n\n  onDataChange() {\n    // called whenever data stored in database has changed\n    this.G.L.entry(\"DraftpollPage.onDataChange\");\n    // TODO: what?\n  }\n\n  // for form actions:\n\n  set_poll_type() {\n    let c = this.formGroup.get('poll_type');\n    if (c.valid) this.pd.type = c.value;\n  }\n\n  set_poll_language() {\n    let c = this.formGroup.get('poll_language');\n    if (c.valid) this.pd.language = c.value;\n  }\n\n  set_poll_title() {\n    let c = this.formGroup.get('poll_title');\n    if (c.valid) this.pd.title = c.value;\n  }\n\n  set_poll_desc() {\n    let c = this.formGroup.get('poll_desc');\n    if (c.valid) this.pd.desc = c.value;\n  }\n\n  set_poll_url() {\n    let c = this.formGroup.get('poll_url');\n    if (c.valid) this.pd.url = c.value;\n  }\n\n  set_poll_due_type() {\n    let c = this.formGroup.get('poll_due_type');\n    if (c.valid) this.pd.due_type = c.value;\n  }\n\n  set_poll_due_custom() {\n    this.G.P.update_ref_date();\n    let c = this.formGroup.get('poll_due_custom');\n    if (c.valid) this.pd.due_custom = new Date(c.value);\n  }\n\n  set_option_name(i: number) {\n    let c = this.formGroup.get('option_name'+i);\n    this.G.L.trace(\"set_option_name\",i,c.value);\n    if (c.valid) this.pd.options[i].name = c.value;\n    this.G.L.trace(\"set_option_name result\",this.pd.options,this.pd.options[i]);\n  }\n\n  set_option_desc(i: number) {\n    let c = this.formGroup.get('option_desc'+i);\n    if (c.valid) this.pd.options[i].desc = c.value;\n  }\n\n  set_option_url(i: number) {\n    let c = this.formGroup.get('option_url'+i);\n    if (c.valid) this.pd.options[i].url = c.value;\n  }\n\n  // selectServer component hooks:\n\n  set_db(value: string) {\n    this.pd.db = value;\n  }\n\n  set_db_from_pid(value: string) {\n    this.pd.db_from_pid = value;\n  }\n\n  set_db_custom_server_url(value: string) {\n    this.pd.db_custom_server_url = value;\n  }\n\n  set_db_custom_password(value: string) {\n    this.pd.db_custom_password = value;\n  }\n\n  // focus management:\n\n  set_focus(input_element_id: string) {\n    /** set the focus to a certain IonInput element after 100 ms */\n    setTimeout(() => {\n      const next_input_element = <IonInput><unknown>document.getElementById(input_element_id);\n      if (!!next_input_element) {\n        next_input_element.setFocus();\n      }\n    }, 100);  \n  }\n\n  open_due_select() {\n    // TODO: find a way to open it so that the title is still visible. \n    /**/\n    setTimeout(() => {\n      (<IonSelect><unknown>document.getElementById('due_select')).open(new MouseEvent(\"click\"));\n    }, 100);\n    /**/\n  }\n\n  open_due_custom() {\n    setTimeout(() => {\n// FIXME:      (<IonDatetime><unknown>document.getElementById('poll_due_custom')).open();\n    }, 100);\n  }\n\n  changed_poll_type() {\n    if (this.stage < 1) {\n      this.stage = Math.max(this.stage, 1);    \n      this.set_focus('input_poll_title');  \n    }\n  }\n\n  blur_poll_title() {\n    if (!this.formGroup.get('poll_title').valid) {\n      this.set_focus('input_poll_title');\n    }\n  }\n\n  poll_title_onKeydown(ev: KeyboardEvent) {\n    if (is_forward_key(ev)) {\n      if (this.formGroup.get('poll_title').valid) {\n        if (this.stage < 2) {\n          this.stage = this.show_details ? 2 : 4;\n        }\n        if (this.show_details) {\n          this.set_focus('input_poll_desc');\n        } else {\n          this.open_due_select();\n        }\n      } else {\n        this.set_focus('input_poll_title');\n      }  \n    }\n  }\n\n  blur_poll_desc() {\n  }\n\n  poll_desc_onKeydown(ev: KeyboardEvent) {\n    if (is_forward_key(ev)) {\n      if (this.stage < 3) {\n        this.stage = 3;\n        this.set_focus('input_poll_url');  \n      }  \n    }\n  }\n\n  blur_poll_url() {\n    if (!this.formGroup.get('poll_url').valid) {\n      this.set_focus('input_poll_url');\n    }\n  }\n\n  poll_url_onKeydown(ev: KeyboardEvent) {\n    if (is_forward_key(ev)) {\n      if (this.formGroup.get('poll_url').valid) {\n        if (this.stage < 4) {\n          this.stage = Math.max(this.stage, 4);\n        }\n        this.open_due_select(); // TODO: open select for due type      \n      } else {\n        this.set_focus('input_poll_url');\n      }  \n    }\n  }\n\n  changed_due_type() {\n    if (this.stage < 5) {\n      if (this.formGroup.get('poll_due_type').value == 'custom') {\n        this.stage = 5;\n        this.open_due_custom();\n      } else {\n        this.stage = 6;\n        this.set_focus('input_option_name0');\n      }\n    }\n  }\n\n  changed_poll_due_custom() {\n    if (this.formGroup.get('poll_due_custom').valid) {\n      if (this.stage < 6) {\n        this.stage = 6;\n        this.set_focus('input_option_name0');\n      }  \n    }\n  }\n\n  blur_option_name(i: number) {\n    if (!this.formGroup.get('option_name'+i).valid) {\n      this.set_focus('input_option_name'+i);\n    }\n  }\n\n  option_name_onKeydown(ev: KeyboardEvent, i: number, show_details: boolean) {\n    if (is_forward_key(ev)) {\n      if (this.formGroup.get('option_name'+i).valid) {\n        if (show_details) {\n          this.option_stage = this.max(this.option_stage, 1);\n          this.expanded[i] = true;\n          this.set_focus('input_option_desc'+i);\n        } else if (i == this.n_options - 1) {\n          this.next_option(i);\n        }\n      } else {\n        this.set_focus('input_option_name'+i);\n      }  \n    }\n  }\n\n  blur_option_desc(i: number) {\n    if (!this.formGroup.get('option_desc'+i).valid) {\n      this.set_focus('input_option_desc'+i);\n    }\n  }\n\n  option_desc_onKeydown(ev: KeyboardEvent, i: number) {\n    if (is_forward_key(ev)) {\n      if (this.formGroup.get('option_desc'+i).valid) {\n        this.option_stage = Math.max(this.option_stage, 2);\n        this.set_focus('input_option_url'+i);\n      } else {\n        this.set_focus('input_option_desc'+i);\n      }  \n    }\n  }\n\n  blur_option_url(i: number) {\n    if (!this.formGroup.get('option_url'+i).valid) {\n      this.set_focus('input_option_url'+i);\n    }\n  }\n  \n  option_url_onKeydown(ev: KeyboardEvent, i: number) {\n    if (is_forward_key(ev)) {\n      if (this.formGroup.get('option_url'+i).valid) {\n        if (i == this.n_options - 1) {\n          this.next_option(i);\n        } else {\n          this.set_focus('input_option_name'+(i+1));\n        }\n      } else {\n        this.set_focus('input_option_url'+i);\n      }  \n    }\n  }\n\n  next_option(i: number) {\n    this.option_stage = this.max(this.option_stage, 3);\n    this.expanded[i] = false;\n    this.add_option({});\n    this.set_focus('input_option_name'+(i+1));\n  }\n\n  async del_poll_dialog() { \n    const confirm = await this.alertCtrl.create({ \n      message: this.translate.instant(\n        \"draftpoll.del-poll-confirm-question\"), \n      buttons: [\n        { \n          text: this.translate.instant('cancel'), \n          role: 'Cancel',\n          handler: () => { \n            console.log('Confirm Cancel.');  \n          } \n        },\n        { \n          text: this.translate.instant('OK'),\n          role: 'Ok', \n          handler: () => {\n            this.del_draft();\n          } \n        } \n      ] \n    }); \n    await confirm.present(); \n  } \n\n  async del_option_dialog(i: number) { \n    const confirm = await this.alertCtrl.create({ \n      message: this.translate.instant(\n        this.formGroup.get('poll_type').value == 'choice' \n          ? \"draftpoll.del-option-confirm-question\" \n          : \"draftpoll.del-target-confirm-question\", \n        { name: this.formGroup.get('option_name'+i).value }), \n      buttons: [\n        { \n          text: this.translate.instant('cancel'), \n          role: 'Cancel',\n          handler: () => { \n            console.log('Confirm Cancel.');  \n          } \n        },\n        { \n          text: this.translate.instant('OK'),\n          role: 'Ok', \n          handler: () => {\n            this.del_option(i);\n          } \n        } \n      ] \n    }); \n    await confirm.present(); \n  } \n\n  no_more() {\n    if ((this.formGroup.get('option_name'+(this.n_options-1)).value||'')=='') {\n      this.option_stage = 10;\n      this.del_option(this.n_options-1);\n    }\n  }\n\n  new_option() {\n    this.option_stage = 0;\n    this.add_option({});\n  }\n  \n  // kebap:\n\n  showkebap(event: Event) {\n    this.popover.create({\n        event, \n        component: DraftpollKebapPage, \n        translucent: true,\n        showBackdrop: false,\n        cssClass: 'kebap',\n        componentProps: {parent: this}\n      })\n      .then((popoverElement)=>{\n        popoverElement.present();\n      })\n  }\n\n  send4review() { \n    this.G.L.warn(\"DraftpollPage.send4review not yet implemented!\");\n  }\n\n  async import_csv_dialog() { \n    const confirm = await this.alertCtrl.create({ \n      header: this.translate.instant('draftpoll.import-options-header'), \n      message: this.translate.instant(\"draftpoll.import-options-msg\"), \n      buttons: [\n        { \n          text: this.translate.instant('cancel'), \n          role: 'Cancel',\n          handler: () => { \n            console.log('Confirm Cancel.');  \n          } \n        },\n        { \n          text: this.translate.instant('choose-file'),\n          role: 'Ok', \n          handler: () => {\n            // open the file chooser by simulating a click to the hidden form field:\n            document.getElementById(\"choosefile\").click();\n          } \n        } \n      ] \n    }); \n    await confirm.present(); \n  } \n\n  // ready button:\n\n  ready_button_clicked() {\n    this.formGroup.get('poll_due_custom').updateValueAndValidity();\n    if (this.formGroup.valid) {\n      if (!this.pid) {\n        this.pid = (this.pd.is_test == true ? 'TEST_' : '') + this.G.P.generate_pid();\n      }\n      this.router.navigate(['/previewpoll/'+this.pid]);\n    }\n  }\n\n  // OTHER METHODS:\n\n  private reset() {\n    this.formGroup = this.formBuilder.group({\n      poll_type: new UntypedFormControl('', Validators.required),\n      poll_language: new UntypedFormControl(''),\n      poll_title: new UntypedFormControl('', Validators.required),\n      poll_desc: new UntypedFormControl(''),\n      poll_url: new UntypedFormControl('', Validators.pattern(this.G.urlRegex)),\n      poll_due_type: new UntypedFormControl('', Validators.required),\n      poll_due_custom: new UntypedFormControl('', this.allowed_date.bind(this)),\n    });\n    this.G.P.update_ref_date();\n  }\n\n  private del_draft() {\n    // TODO!\n    if (this.pid) {\n      this.G.P.polls[this.pid].delete();\n    }\n    this.deleted = true;\n    this.router.navigate([\"/mypolls\"]);\n  }\n\n  import_csv(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    const page = this;\n    reader.onload = function (event) {\n      const content = event.target.result as string;\n      for (var row of content.split(\"\\n\")) {\n        // TODO: improve csv parser!\n        var cols = row.split(/\\s*\"\\s*,\\s*\"\\s*/);\n        if (cols.length>0) {\n          cols[0] = cols[0].slice(cols[0].indexOf('\"')+1);\n          cols[cols.length-1] = cols[cols.length-1].slice(0, cols[cols.length-1].indexOf('\"'));\n          cols = cols.map(c => c.trim());\n          if (cols[0] != \"\") {\n            page.no_more();\n            if (cols.length==1) { \n              page.add_option({ name:cols[0] });\n            } else if (cols.length==2) { \n              page.add_option({ name:cols[0], desc:cols[1] });\n              page.detailstoggle.checked = true;\n            } else { \n              page.add_option({ name:cols[0], desc:cols[1], url:cols[2]}); \n              page.detailstoggle.checked = true;\n            }\n            page.stage = 10;\n            page.option_stage = 10;\n          }\n        }\n      }\n    }\n    reader.readAsText(file);\n  }\n\n  restart_with_data(spec: string) {\n    this.G.L.info(\"DraftpollPage.restart_with_data\", spec);\n    this.router.navigate(['/draftpoll/use/'+encodeURIComponent(spec)]);\n  }\n\n  private add_option(od: option_data_t) {\n    let i = this.n_options;\n    this.pd.options.push(od);\n    this.add_option_inputs(i);\n    this.formGroup.get('option_name'+i).setValue(od.name); \n    this.formGroup.get('option_desc'+i).setValue(od.desc); \n    this.formGroup.get('option_url'+i).setValue(od.url); \n  }\n\n  private add_option_inputs(i:number) {\n    this.formGroup.addControl('option_name' + i, new UntypedFormControl(\"\", [Validators.required], [unique_name_validator$(this.existingOptionName$( 'option_name' + i))]));\n    this.formGroup.addControl('option_desc'+i, new UntypedFormControl(\"\"));\n    this.formGroup.addControl('option_url'+i, new UntypedFormControl(\"\", Validators.pattern(this.G.urlRegex)));\n    this.option_stage = 0;\n  }\n  \n  private del_option(i: number) {\n    // move metadata of options i+1,i+2,... back one slot to i,i+1,...:\n    for (let j=i+1; j<this.n_options; j++) {\n      this.formGroup.get('option_name'+(j-1)).setValue(this.formGroup.get('option_name'+j).value); \n      this.formGroup.get('option_desc'+(j-1)).setValue(this.formGroup.get('option_desc'+j).value); \n      this.formGroup.get('option_url'+(j-1)).setValue(this.formGroup.get('option_url'+j).value); \n      this.pd.options[j-1] = this.pd.options[j];\n    }\n    // remove last:\n    let j = this.n_options-1;\n    this.formGroup.removeControl('option_name'+j);\n    this.formGroup.removeControl('option_desc'+j);\n    this.formGroup.removeControl('option_url'+j);\n    this.pd.options.pop();\n  }\n\n  now() { return new Date(); }\n\n  private allowed_date(control: AbstractControl): ValidationErrors | null {\n    if (control && control.value) {\n      const value = new Date(control.value);\n      // check whether in past:\n      if (this.G.P.ref_date >= value)\n      {\n          return {past: true};\n      }\n      // check whether too far in future:\n      if (this.get_max_due() < value)\n      {\n          return {too_late: true};\n      }\n      return null;\n    }\n  }\n\n  get_max_due() {\n    const last = new Date(this.G.P.ref_date.valueOf());\n    last.setDate(last.getDate() + this.E.polls.max_duration_days);\n    return last;\n  }\n\n  // CONSTANTS:\n\n  validation_messages = {\n    'poll_type': [\n      { type: 'required', message: 'validation.poll-type-required' },\n    ],\n    'poll_language': [\n    ],\n    'poll_title': [\n      { type: 'required', message: 'validation.poll-title-required' },\n    ],\n    'poll_desc': [\n    ],\n    'poll_url': [\n      { type: 'pattern', message: 'validation.poll-url-valid' },\n    ],\n    'poll_due_type': [\n      { type: 'required', message: 'validation.poll-due-type-required' },\n    ],\n    'poll_due_custom': [\n      { message: 'validation.poll-due-future' },\n    ],\n    'option_name': [\n      { type: 'required', message: 'validation.option-name-required' },\n      { type: 'not_unique', message: 'validation.option-name-unique' },\n    ],\n    'option_desc': [\n    ],\n    'option_url': [\n      { type: 'pattern', message: 'validation.option-url-valid' },\n    ],\n  }\n\n  existingOptionName$(currentControlName: string): Observable<string[]> {\n    return this.formGroup.valueChanges.pipe(\n      map(values => {\n        const optionNameKeys = Object.keys(values as Object).filter(k => { return k.includes('option_name') && k !== currentControlName })\n        const existingOptionNames: string[] = [];\n        optionNameKeys.forEach(key => existingOptionNames.push(values[key]));\n        return existingOptionNames;\n      })\n    )\n  }\n\n  \n}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DraftpollPage } from './draftpoll.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DraftpollPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DraftpollPageRoutingModule {}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DraftpollPageRoutingModule } from './draftpoll-routing.module';\nimport { SharedcomponentsModule } from '../sharedcomponents/sharedcomponents.module';\n\nimport { DraftpollPage } from './draftpoll.page';\nexport { DraftpollPage } from './draftpoll.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    DraftpollPageRoutingModule,\n    SharedcomponentsModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [DraftpollPage],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DraftpollPageModule {}\n"],"x_google_ignoreList":[]}