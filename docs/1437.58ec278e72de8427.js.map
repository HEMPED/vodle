{"version":3,"file":"1437.58ec278e72de8427.js","mappings":"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","names":["i0","routes","path","component","DelrespondPage","constructor","router","route","translate","G","this","L","entry","params","subscribe","url","pid","did","from","decodeURIComponent","private_key","ngOnInit","ionViewWillEnter","D","page","ionViewDidEnter","ready","onDataReady","debug","P","polls","p","state","status","Del","get_incoming_request_status","store_incoming_request","exit","ionViewDidLeave","save_state","accept","navigate","decline","dismiss","selectors","DelrespondPageRoutingModule","RouterModule","DelrespondPageModule","CommonModule","FormsModule","IonicModule","TranslateModule"],"sourceRoot":"webpack:///","sources":["./src/app/delrespond/delrespond.page.html","./src/app/delrespond/delrespond-routing.module.ts","./src/app/delrespond/delrespond.page.ts","./src/app/delrespond/delrespond.module.ts"],"sourcesContent":["<!--\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<ion-header>\n  <ion-toolbar style=\"padding-right:11px;\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title [innerHtml]=\"'delrespond.-page-title'|translate\"></ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *ngIf=\"ready\">\n\n  <!-- DEPENDING ON STATUS, SHOW DIFFERENT VERSIONS OF THE PAGE: -->\n\n  <!-- Acceptance is possible: -->\n\n  <ng-container *ngIf=\"status[0]=='possible'\">\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <h4><b [innerHtml]=\"'delrespond.header'|translate:{from:from,poll_title:p.title}\"></b></h4> \n        <p [innerHtml]=\"'delrespond.intro'|translate\"></p> \n        <small><p [innerHtml]=\"'delrespond.details'|translate\"></p></small>\n      </ion-col>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <ion-button size=\"large\" color=\"warning\"\n            shape=\"round\"\n            (click)=\"decline()\">\n          <ion-icon name=\"ban\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.decline'|translate\"></span>\n        </ion-button>&nbsp;&nbsp;\n        <ion-button size=\"large\" color=\"primary\"\n            shape=\"round\"\n            (click)=\"accept()\">\n          <ion-icon name=\"checkmark\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.accept'|translate\"></span>\n        </ion-button>\n      </ion-col>\n    </ion-item>\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-label class=\"ion-no-padding ion-no-margin\">\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <small><p [innerHtml]=\"'delrespond.check-first'|translate\"></p></small>\n        <ion-button class=\"ion-no-margin ion-no-padding\" fill=\"clear\" size=\"small\" [routerLink]=\"'/poll/'+p.pid\">\n          <ion-icon name=\"arrow-forward-outline\" size=\"small\"></ion-icon>&nbsp;<span [innerHtml]=\"'go-to-poll'|translate\"></span>\n        </ion-button>  \n      </ion-label>\n    </ion-item>  \n  </ng-container>\n\n  <!-- Acceptance would lead to cycle: - ->\n    (We do no longer disallow this. \n     TODO: We should however tell the user that a cycle is created)\n\n  <ng-container *ngIf=\"(status[1]=='cycle')||(status[1]=='two-way')\">\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <h4 [innerHtml]=\"'delrespond.cycle-header'|translate:{from:from,poll_title:p.title}\"></h4> \n        <ng-container *ngIf=\"status[1]=='two-way'\">\n          <p><b [innerHtml]=\"'delrespond.two-way-intro'|translate:{from:from}\"></b></p> \n        </ng-container>\n        <ng-container *ngIf=\"status[1]=='cycle'\">\n          <p [innerHtml]=\"'delrespond.cycle-intro'|translate:{from:from}\"></p> \n        </ng-container>\n        <p [innerHtml]=\"'delrespond.cycle-details'|translate\"></p>\n      </ion-col>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <ion-button size=\"large\" color=\"warning\"\n            shape=\"round\"\n            (click)=\"decline()\">\n          <ion-icon name=\"ban\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.decline'|translate\"></span>\n        </ion-button>&nbsp;&nbsp;\n        <ion-button size=\"large\" color=\"primary\" disabled=\"true\"\n            shape=\"round\"\n            (click)=\"accept()\">\n          <ion-icon name=\"checkmark\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.accept'|translate\"></span>\n        </ion-button>\n      </ion-col>\n    </ion-item>\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <p>&nbsp;</p>\n        <p [innerHtml]=\"'delrespond.cycle-revoke-first'|translate\"></p>\n        <ion-button shape=\"round\" class=\"\" [routerLink]=\"'/poll/'+p.pid\">\n          <ion-icon name=\"arrow-forward-outline\"></ion-icon>&nbsp;<span [innerHtml]=\"'go-to-poll'|translate\"></span>\n        </ion-button>  \n      </ion-col>\n    </ion-item>  \n  </ng-container>\n  -->\n  <!--\n  <ng-container *ngIf=\"status=='cycle'\">\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <h4><b [innerHtml]=\"'delrespond.cycle-header'|translate:{from:from,poll_title:p.title}\"></b></h4> \n        <p [innerHtml]=\"'delrespond.cycle-intro:{from:from}'|translate\"></p> \n        <small><p [innerHtml]=\"'delrespond.details'|translate\"></p></small>\n      </ion-col>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-label class=\"ion-no-padding ion-no-margin\">\n        <p [innerHtml]=\"'delrespond.cycle-revoke-first'|translate\"></p>\n        <ion-button class=\"ion-no-margin ion-no-padding\" fill=\"clear\" [routerLink]=\"'/poll/'+p.pid\">\n          <ion-icon name=\"arrow-forward-outline\"></ion-icon>&nbsp;<span [innerHtml]=\"'go-to-poll'|translate\"></span>\n        </ion-button>  \n      </ion-label>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <ion-button size=\"large\" color=\"warning\"\n            shape=\"round\"\n            (click)=\"decline()\">\n          <ion-icon name=\"ban\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.decline'|translate\"></span>\n        </ion-button>&nbsp;&nbsp;\n        <ion-button size=\"large\" color=\"primary\" disabled=\"true\"\n            shape=\"round\"\n            (click)=\"accept()\">\n          <ion-icon name=\"checkmark\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.accept'|translate\"></span>\n        </ion-button>\n      </ion-col>\n    </ion-item>\n  </ng-container>\n  -->\n  \n  <!-- Acceptance would exceed maximum allowed voting weight: -->\n\n  <ng-container *ngIf=\"status[1]=='weight-exceeded'\">\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <h4><b [innerHtml]=\"'delrespond.weight-exceeded-header'|translate:{from:from,poll_title:p.title}\"></b></h4> \n        <p [innerHtml]=\"'delrespond.weight-exceeded-intro:{from:from,limit:environment.delegation.max_weight}'|translate\"></p> \n        <small><p [innerHtml]=\"'delrespond.details'|translate\"></p></small>\n      </ion-col>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-label class=\"ion-no-padding ion-no-margin\">\n        <p [innerHtml]=\"'delrespond.weight-exceeded-revoke-first'|translate\"></p>\n        <ion-button class=\"ion-no-margin ion-no-padding\" fill=\"clear\" [routerLink]=\"'/poll/'+p.pid\">\n          <ion-icon name=\"arrow-forward-outline\"></ion-icon>&nbsp;<span [innerHtml]=\"'go-to-poll'|translate\"></span>\n        </ion-button>  \n      </ion-label>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <ion-button size=\"large\" color=\"warning\"\n            shape=\"round\"\n            (click)=\"decline()\">\n          <ion-icon name=\"ban\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.decline'|translate\"></span>\n        </ion-button>&nbsp;&nbsp;\n        <ion-button size=\"large\" color=\"primary\" disabled=\"true\"\n            shape=\"round\"\n            (click)=\"accept()\">\n          <ion-icon name=\"checkmark\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.accept'|translate\"></span>\n        </ion-button>\n      </ion-col>\n    </ion-item>\n  </ng-container>\n\n  <!-- Request was already accepted but can be declined after the fact: -->\n\n  <ng-container *ngIf=\"status[0]=='accepted'\">\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <h4><b [innerHtml]=\"'delrespond.accepted-header'|translate:{from:from,poll_title:p.title}\"></b></h4> \n        <p [innerHtml]=\"'delrespond.accepted-intro'|translate:{from:from,poll_title:p.title}\"></p> \n        <small><p [innerHtml]=\"'delrespond.accepted-details'|translate\"></p></small>\n      </ion-col>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <ion-button size=\"large\" color=\"warning\"\n            shape=\"round\"\n            (click)=\"decline()\">\n          <ion-icon name=\"ban\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.revoke'|translate\"></span>\n        </ion-button>&nbsp;&nbsp;\n        <ion-button size=\"large\" color=\"primary\"\n            shape=\"round\"\n            (click)=\"accept()\">\n          <ion-icon name=\"checkmark\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.keep'|translate\"></span>\n        </ion-button>\n      </ion-col>\n    </ion-item>\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-label class=\"ion-no-padding ion-no-margin\">\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <small><p [innerHtml]=\"'delrespond.check-first'|translate\"></p></small>\n        <ion-button class=\"ion-no-margin ion-no-padding\" fill=\"clear\" size=\"small\" [routerLink]=\"'/poll/'+p.pid\">\n          <ion-icon name=\"arrow-forward-outline\" size=\"small\"></ion-icon>&nbsp;<span [innerHtml]=\"'go-to-poll'|translate\"></span>\n        </ion-button>  \n      </ion-label>\n    </ion-item>  \n  </ng-container>\n\n  <!-- Request was already declined but can be accepted after the fact: -->\n\n  <ng-container *ngIf=\"status[0]=='declined, possible'\">\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <h4><b [innerHtml]=\"'delrespond.declined-header'|translate:{from:from,poll_title:p.title}\"></b></h4> \n        <p [innerHtml]=\"'delrespond.declined-intro'|translate:{from:from,poll_title:p.title}\"></p> \n        <small><p [innerHtml]=\"'delrespond.declined-details'|translate\"></p></small>\n      </ion-col>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <ion-button size=\"large\" color=\"warning\"\n            shape=\"round\"\n            (click)=\"decline()\">\n          <ion-icon name=\"ban\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.no-change'|translate\"></span>\n        </ion-button>&nbsp;&nbsp;\n        <ion-button size=\"large\" color=\"primary\"\n            shape=\"round\"\n            (click)=\"accept()\">\n          <ion-icon name=\"checkmark\"></ion-icon>&nbsp;\n          <span [innerHtml]=\"'delrespond.accept'|translate\"></span>\n        </ion-button>\n      </ion-col>\n    </ion-item>\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-label class=\"ion-no-padding ion-no-margin\">\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <small><p [innerHtml]=\"'delrespond.check-first'|translate\"></p></small>\n        <ion-button class=\"ion-no-margin ion-no-padding\" fill=\"clear\" size=\"small\" [routerLink]=\"'/poll/'+p.pid\">\n          <ion-icon name=\"arrow-forward-outline\" size=\"small\"></ion-icon>&nbsp;<span [innerHtml]=\"'go-to-poll'|translate\"></span>\n        </ion-button>  \n      </ion-label>\n    </ion-item>  \n  </ng-container>\n\n  <!-- Request was already declined and cannot be accepted: -->\n\n  <ng-container *ngIf=\"(status[0]=='declined, impossible')\">\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <h4><b [innerHtml]=\"'delrespond.declined-header'|translate:{from:from,poll_title:p.title}\"></b></h4> \n        <p [innerHtml]=\"'delrespond.declined-intro'|translate:{from:from,poll_title:p.title}\"></p> \n        <small><p [innerHtml]=\"'delrespond.declined-impossible-details'|translate\"></p></small>\n      </ion-col>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <ion-button size=\"large\" color=\"primary\"\n            shape=\"round\"\n            (click)=\"dismiss()\">\n          <span [innerHtml]=\"'OK'|translate\"></span>\n        </ion-button>\n      </ion-col>\n    </ion-item>\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-label class=\"ion-no-padding ion-no-margin\">\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <small><p [innerHtml]=\"'delrespond.check-first'|translate\"></p></small>\n        <ion-button class=\"ion-no-margin ion-no-padding\" fill=\"clear\" size=\"small\" [routerLink]=\"'/poll/'+p.pid\">\n          <ion-icon name=\"arrow-forward-outline\" size=\"small\"></ion-icon>&nbsp;<span [innerHtml]=\"'go-to-poll'|translate\"></span>\n        </ion-button>  \n      </ion-label>\n    </ion-item>  \n  </ng-container>\n\n  <!-- Poll is unknown: -->\n\n  <ng-container *ngIf=\"status==['impossible','poll-unknown']\">\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <p [innerHtml]=\"'delrespond.poll-unknown'|translate:{from:from}\"></p> \n      </ion-col>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <ion-button size=\"large\" color=\"primary\" \n            shape=\"round\"\n            (click)=\"dismiss()\">\n          <span [innerHtml]=\"'OK'|translate\"></span>\n        </ion-button>\n      </ion-col>\n    </ion-item>\n  </ng-container>\n\n  <!-- Poll is already closed (has already ended): -->\n\n  <ng-container *ngIf=\"status==['impossible','closed']\">\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <p [innerHtml]=\"'delrespond.closed'|translate:{from:from}\"></p> \n      </ion-col>\n    </ion-item>  \n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-col class=\"ion-no-padding ion-no-margin\">\n        <ion-button size=\"large\" color=\"primary\"\n            shape=\"round\"\n            (click)=\"dismiss()\">\n          <span [innerHtml]=\"'OK'|translate\"></span>\n        </ion-button>\n      </ion-col>\n    </ion-item>\n    <ion-item lines=\"none\" class=\"ion-text-center\">\n      <ion-label class=\"ion-no-padding ion-no-margin\">\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <ion-button class=\"ion-no-margin ion-no-padding\" fill=\"clear\" size=\"small\" [routerLink]=\"'/poll/'+p.pid\">\n          <ion-icon name=\"arrow-forward-outline\" size=\"small\"></ion-icon>&nbsp;<span [innerHtml]=\"'go-to-poll'|translate\"></span>\n        </ion-button>  \n      </ion-label>\n    </ion-item>  \n  </ng-container>\n\n  <!-- We're still missing some data: -->\n\n  <ng-container *ngIf=\"status==['impossible','not-in-db']\">\n    <ion-item [innerHtml]=\"'delrespond.try-again'|translate\">      \n      <!-- TODO: store this request anyway and show it as a badge in mypolls and as a banner in the poll once poll has been entered -->\n    </ion-item>  \n    <ion-button size=\"large\" color=\"primary\" slot=\"end\"\n        shape=\"round\"\n        (click)=\"dismiss()\">\n      <span [innerHtml]=\"'OK'|translate\"></span>&nbsp;\n    </ion-button>\n  </ng-container>\n\n  <!-- It's ourselves: -->\n\n  <ng-container *ngIf=\"status==['impossible','is-self']\">\n    <ion-item [innerHtml]=\"'delrespond.is-self'|translate\">      \n    </ion-item>  \n    <ion-button size=\"large\" color=\"primary\" slot=\"end\"\n        shape=\"round\"\n        (click)=\"dismiss()\">\n      <span [innerHtml]=\"'OK'|translate\"></span>&nbsp;\n    </ion-button>\n  </ng-container>\n  \n</ion-content>\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DelrespondPage } from './delrespond.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DelrespondPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DelrespondPageRoutingModule {}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { del_agreement_t } from '../data.service';\n\nimport { GlobalService } from \"../global.service\";\nimport { Poll } from '../poll.service';\n\n@Component({\n  selector: 'app-join',\n  templateUrl: './delrespond.page.html',\n  styleUrls: ['./delrespond.page.scss'],\n})\nexport class DelrespondPage implements OnInit {\n\n  url: string;\n  pid: string;\n  p: Poll;\n  did: string;\n  from: string;\n  private_key: string;\n  agreement: del_agreement_t;\n  status: Array<string>;\n\n  // LIFECYCLE:\n\n  ready = false;  \n\n  constructor(\n    public router: Router,\n    private route: ActivatedRoute,\n    public translate: TranslateService,\n    public G: GlobalService) {\n    this.G.L.entry(\"DelrespondPage.constructor\");\n    this.route.params.subscribe( params => { \n      this.url = this.router.url;\n      this.pid = params['pid'];\n      this.did = params['did'];\n      this.from = decodeURIComponent(params['from']);\n      this.private_key = params['private_key'];\n    } );\n  }\n\n  ngOnInit() {\n    this.G.L.entry(\"DelrespondPage.ngOnInit\");\n  }\n\n  ionViewWillEnter() {\n    this.G.L.entry(\"DelrespondPage.ionViewWillEnter\");\n    this.G.D.page = this;\n  }\n\n  ionViewDidEnter() {\n    this.G.L.entry(\"DelrespondPage.ionViewDidEnter\");\n    if (this.G.D.ready) {\n      this.onDataReady();\n    }\n    this.G.L.debug(\"DelrespondPage.ready:\", this.ready);\n  }\n\n  onDataReady() {\n    // called when DataService initialization was slower than view initialization\n    if (this.pid in this.G.P.polls) {\n      this.p = this.G.P.polls[this.pid];    \n    }\n    this.G.L.entry(\"DelrespondPage.onDataReady\", this.pid, this.p.state);\n    this.status = this.G.Del.get_incoming_request_status(this.pid, this.did);\n    this.G.Del.store_incoming_request(this.pid, this.did, this.from, this.url, this.status[0]);\n    this.ready = true;\n    this.G.L.exit(\"DelrespondPage.onDataReady\");\n  }\n\n  ionViewDidLeave() {\n    this.G.L.entry(\"DelrespondPage.ionViewDidLeave\");\n    this.G.D.save_state();\n    this.G.L.exit(\"DelrespondPage.ionViewDidLeave\");\n  }\n\n  // GUI callbacks:\n\n  accept() {\n    /** store positive response and go to poll page */\n    this.G.Del.accept(this.pid, this.did, this.private_key);\n    // TODO: notify that response has been sent\n    this.router.navigate([\"/poll/\" + this.pid]);\n  }\n\n  decline() {\n    /** store negative response and go to poll page */\n    this.G.Del.decline(this.pid, this.did, this.private_key);\n    // TODO: notify that response has been sent\n    this.router.navigate([\"/poll/\" + this.pid]);\n  }\n\n  dismiss() {\n    this.router.navigate([\"/mypolls\"]);\n  }\n\n}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DelrespondPageRoutingModule } from './delrespond-routing.module';\n\nimport { DelrespondPage } from './delrespond.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DelrespondPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [DelrespondPage]\n})\nexport class DelrespondPageModule {}\n"],"x_google_ignoreList":[]}