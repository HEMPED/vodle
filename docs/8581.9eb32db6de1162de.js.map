{"version":3,"file":"8581.9eb32db6de1162de.js","mappings":"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","names":["i0","j_r69","AssistPage","constructor","translate","modalController","G","this","Array","Math","Object","window","document","environment","JSON","L","entry","ngOnInit","ionViewWillEnter","D","page","S","default_wap","oid","P","oidsorted","acceptable","estimates","ionViewDidEnter","onScroll","onDataReady","onDataChange","ionViewWillLeave","ionViewDidLeave","save_state","set_rating","rating","ratings","p","set_my_own_rating","close","dismiss","update_order","back","step","ceil","changes","forward","steps_reached","floor","go_step","thresholded_oids","acceptable_oids","favourite","push","go_index","max","favourite_change","submit_favourite","trace","r","min","get_my_own_rating","understood_favourite","acceptable_change","submit_acceptable","length","understood_acceptable","estimate_change","submit_estimates","thresholds","understood_estimates","i","current_index","threshold_yes","threshold_answer","threshold_no","threshold_change","submit_threshold","set_thresholded_ratings","understood_ratings","scrollElement","elem","content","getScrollElement","totalContentHeight","scrollHeight","viewportHeight","offsetHeight","rel_scroll_position","scrollTop","n","show_down","show_up","scroll_to_top","scrollTo","scroll_to_bottom","selectors","IonContent","ctx","routes","path","component","AssistPageRoutingModule","RouterModule","AssistPageModule","CommonModule","FormsModule","IonicModule","TranslateModule"],"sourceRoot":"webpack:///","sources":["./src/app/assist/assist.page.html","./src/app/assist/assist.page.ts","./src/app/assist/assist-routing.module.ts","./src/app/assist/assist.module.ts"],"sourcesContent":["<!--\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<ion-header>\n\n  <ion-item class=\"ion-no-margin ion-no-padding\" style=\"--inner-padding-end:0px!important\">\n    <ion-toolbar style=\"padding-left: 16px;\">\n\n      <ion-icon slot=\"start\" name=\"color-wand-outline\"></ion-icon>&nbsp;\n      <ion-text \n        style=\"font-weight: bold; font-size: larger;\"\n        [innerHtml]=\"'assist.-page-title' | translate\">\n      </ion-text>\n      <ion-buttons slot=\"end\">\n\n        <!-- OFFLINE SIGN -- >\n        <ng-container *ngIf=\"!window.navigator.onLine\">\n          <ion-icon name=\"cloud-offline-outline\" color=\"grey\"\n            style=\"position: relative; bottom: -1px;\">\n          </ion-icon>\n          <ion-icon name=\"alert-outline\" color=\"grey\">\n          </ion-icon>\n        </ng-container> \n        <!---->\n\n        <!-- SYNCING SIGN: -->\n        <ion-spinner *ngIf=\"!!P.p && P.p.syncing && window.navigator.onLine\" name=\"crescent\" color=\"grey\"></ion-spinner>\n\n        <!-- CLOSE BUTTON: -->\n        <ion-button fill=\"clear\" (click)=\"close()\">\n          <ion-icon slot=\"icon-only\" name=\"close-outline\"></ion-icon>\n        </ion-button>\n    \n      </ion-buttons>\n    </ion-toolbar>\n  </ion-item>\n\n  <!-- NAVIGATION -->\n\n  <ion-item class=\"ion-no-margin ion-padding-left ion-text-center\">\n    <ng-container *ngIf=\"step > 1\">\n      <ion-button slot=\"start\" fill=\"clear\" class=\"ion-no-margin ion-no-padding\"\n          (click)=\"back()\">\n        <ion-icon slot=\"icon-only\" name=\"arrow-back-outline\"></ion-icon>\n      </ion-button>\n      &nbsp;\n    </ng-container>\n    <ion-label>\n      <small>\n        <b>\n          <span [innerHtml]=\"'step-i-of-n'|translate:{i:Math.floor(step), n:n_steps}\"></span>:\n\n          <span [innerHtml]=\"'assist.-step-'+Math.floor(step)+'-title'|translate\"></span>    \n        </b>\n      </small>\n    </ion-label>\n    <ng-container *ngIf=\"step < steps_reached && !changes\">\n      &nbsp;\n      <ion-button slot=\"end\" fill=\"clear\" class=\"ion-no-margin ion-no-padding\"\n          (click)=\"forward()\">\n        <ion-icon slot=\"icon-only\" name=\"arrow-forward-outline\"></ion-icon>\n      </ion-button>\n    </ng-container>\n  </ion-item>\n\n</ion-header>\n\n<!-- SCROLLABLE CONTENT: -->\n\n<ion-content *ngIf=\"P.ready\"\n    [scrollEvents]=\"true\"\n    (ionScroll)=\"onScroll()\"    \n    >\n\n  <!-- STEP 1: FAVOURITE OPTION: -->\n\n  <!-- selection: -->\n  <ng-container *ngIf=\"step == 1\">\n    <ion-item>\n      <p>\n        <span [innerHtml]=\"'assist.favourite-intro-1'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item color=\"warning\" *ngIf=\"P.p.have_acted\">\n      <p>\n        <span [innerHtml]=\"'assist.favourite-warn-change'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item color=\"light\">\n      <p>\n        <span [innerHtml]=\"'assist.favourite-intro-2'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-radio-group [(ngModel)]=\"favourite\" (ngModelChange)=\"favourite_change()\">\n      <ion-item *ngFor=\"let item of [].constructor(P.oidsorted.length); let i = index\">\n        <ion-radio slot=\"start\" [value]=\"P.oidsorted[i]\"></ion-radio>\n        <ion-label><i [innerHtml]=\"P.p.options[P.oidsorted[i]].name\"></i></ion-label>\n      </ion-item>  \n    </ion-radio-group>\n    <ion-item lines=\"none\">\n      <ion-button size=\"normal\" shape=\"round\" slot=\"end\" style=\"padding-top: 10px;\"\n          [disabled]=\"!favourite\"\n          (click)=\"submit_favourite()\">\n        <ion-label [innerHtml]=\"'OK'|translate\"></ion-label>\n      </ion-button>\n    </ion-item>\n    <ion-item lines=\"none\">\n      <small [innerHtml]=\"'assist.add-option-info' | translate\"></small>\n    </ion-item>\n  </ng-container>\n\n  <!-- explanation: -->\n  <ng-container *ngIf=\"step == 1.1\">\n    <ion-item color=\"success\">\n      <p>\n        <span [innerHtml]=\"'assist.favourite-explanation-1'|translate:{favourite: P.p.options[favourite].name}\"></span>\n      </p>\n    </ion-item>\n    <ion-item>\n      <p>\n        <span [innerHtml]=\"'assist.favourite-explanation-2'|translate:{favourite: P.p.options[favourite].name}\"></span>\n      </p>\n    </ion-item>\n    <ion-item>\n      <p>\n        <span [innerHtml]=\"'assist.favourite-explanation-3'|translate:{favourite: P.p.options[favourite].name}\"></span>\n      </p>\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-button size=\"normal\" shape=\"round\" slot=\"end\" style=\"padding-top: 10px;\"\n          (click)=\"understood_favourite()\">\n        <ion-label [innerHtml]=\"'next'|translate\"></ion-label>\n      </ion-button>\n    </ion-item>\n  </ng-container>\n  \n  <!-- STEP 2: ACCEPTABLE OPTIONS -->\n\n  <!-- selection: -->\n  <ng-container *ngIf=\"step == 2\">\n    <ion-item color=\"light\">\n      <p>\n        <span [innerHtml]=\"'assist.acceptable-intro'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item *ngFor=\"let item of [].constructor(P.oidsorted.length); let i = index\">\n      <ng-container *ngIf=\"P.oidsorted[i] == favourite\">\n        <ion-checkbox slot=\"start\" checked=\"true\" disabled=\"true\" style=\"margin-right:30px;\"></ion-checkbox>\n        <ion-text color=\"black\"><i [innerHtml]=\"P.p.options[P.oidsorted[i]].name\"></i>&nbsp;<ion-text color=\"grey\">(<span [innerHtml]=\"'favourite'|translate\"></span>)</ion-text></ion-text>  \n      </ng-container>\n      <ng-container *ngIf=\"P.oidsorted[i] != favourite\">\n        <ion-checkbox [(ngModel)]=\"acceptable[P.oidsorted[i]]\" (ngModelChange)=\"acceptable_change()\" \n          slot=\"start\"></ion-checkbox>\n        <ion-label><i [innerHtml]=\"P.p.options[P.oidsorted[i]].name\"></i></ion-label>  \n      </ng-container>\n    </ion-item>  \n    <ion-item lines=\"none\">\n      <ion-button size=\"normal\" shape=\"round\" slot=\"end\" style=\"padding-top: 10px;\"\n          (click)=\"submit_acceptable()\">\n        <ion-label [innerHtml]=\"'OK'|translate\"></ion-label>\n      </ion-button>\n    </ion-item>\n  </ng-container>\n\n  <!-- explanation: -->\n  <ng-container *ngIf=\"step == 2.1\">\n    <ion-item color=\"success\">\n      <p>\n        <span [innerHtml]=\"'assist.acceptable-explanation-1'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item>\n      <p>\n        <span [innerHtml]=\"'assist.acceptable-explanation-2'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item color=\"success\">\n      <p>\n        <span [innerHtml]=\"'assist.acceptable-explanation-3'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item>\n      <p>\n        <span [innerHtml]=\"'assist.acceptable-explanation-4'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item>\n      <p>\n        <span [innerHtml]=\"'assist.acceptable-explanation-5'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-button size=\"normal\" shape=\"round\" slot=\"end\" style=\"padding-top: 10px;\"\n          (click)=\"understood_acceptable()\">\n        <ion-label [innerHtml]=\"'next'|translate\"></ion-label>\n      </ion-button>\n    </ion-item>\n  </ng-container>\n\n  <!-- STEP 3: ESTIMATED APPROVAL FOR ACCEPTABLE OPTIONS: -->\n\n  <!-- selection: -->\n  <ng-container *ngIf=\"step == 3\">\n    <ion-item color=\"light\">\n      <p>\n        <span [innerHtml]=\"'assist.estimates-intro'|translate\"></span>\n      </p>\n    </ion-item>\n    <ng-container *ngFor=\"let item of [].constructor(P.oidsorted.length); let i = index\">\n      <ion-item *ngIf=\"acceptable[P.oidsorted[i]] && P.oidsorted[i] != favourite\">\n        <ng-container *ngIf=\"P.oidsorted[i] != favourite\">\n          <ion-label><i [innerHtml]=\"P.p.options[P.oidsorted[i]].name\"></i>&nbsp;</ion-label>\n          <ion-buttons slot=\"end\">\n            <ion-input \n              inputmode=\"numeric\" maxlength=\"3\" size=\"3\" type=\"number\" min=\"0\" max=\"100\" step=\"5\" \n              [(ngModel)]=\"estimates[P.oidsorted[i]]\" \n              debounce=\"100\" (ngModelChange)=\"estimate_change()\"\n            ></ion-input>&nbsp;%\n          </ion-buttons>\n        </ng-container>\n      </ion-item>  \n    </ng-container>\n    <ion-item lines=\"none\">\n      <ion-button size=\"normal\" shape=\"round\" slot=\"end\" style=\"padding-top: 10px;\"\n          (click)=\"submit_estimates()\">\n        <ion-label [innerHtml]=\"'OK'|translate\"></ion-label>\n      </ion-button>\n    </ion-item>\n  </ng-container>\n\n  <!-- explanation: -->\n  <ng-container *ngIf=\"step == 3.1\">\n    <ion-item color=\"light\">\n      <p>\n        <span [innerHtml]=\"'assist.estimates-explanation-1'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item>\n      <p>\n        <span [innerHtml]=\"'assist.estimates-explanation-2'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-button size=\"normal\" shape=\"round\" slot=\"end\" style=\"padding-top: 10px;\"\n          (click)=\"understood_estimates()\">\n        <ion-label [innerHtml]=\"'next'|translate\"></ion-label>\n      </ion-button>\n    </ion-item>\n  </ng-container>\n\n  <!-- STEP 4: SINCERE APPROVAL THRESHOLDS FOR ACCEPTABLE OPTIONS: -->\n\n  <!-- selection: -->\n  <ng-container *ngIf=\"step == 4\">\n    <ion-item *ngFor=\"let item of [].constructor(current_index); let i = index\" color=\"secondary\"\n        (click)=\"go_index(i)\" style=\"cursor: pointer;\">\n      <ion-label>\n        <b><i [innerHtml]=\"P.p.options[thresholded_oids[i]].name\"></i></b>\n      </ion-label>\n    </ion-item>\n    <ion-item color=\"primary\">\n      <ion-label>\n        <b><i [innerHtml]=\"P.p.options[thresholded_oids[current_index]].name\"></i></b>\n      </ion-label>\n    </ion-item>\n    <ion-item color=\"light\">\n      <p>\n        <span [innerHtml]=\"'assist.thresholds-intro'|translate:{estimate:estimates[thresholded_oids[current_index]], option:P.p.options[thresholded_oids[current_index]].name}\"></span>\n      </p>\n    </ion-item>\n    <ion-item>\n      <p>\n        <span [innerHtml]=\"'assist.thresholds-question-1'|translate:{estimate:estimates[thresholded_oids[current_index]], option:P.p.options[thresholded_oids[current_index]].name}\"></span>\n      </p>\n      <ion-buttons slot=\"end\">\n        <ion-button [innerHtml]=\"'yes'|translate\" (click)=\"threshold_yes()\" fill=\"solid\"\n          [color]=\"threshold_answer[thresholded_oids[current_index]]==true?'success':'light'\"></ion-button>\n        <ion-button [innerHtml]=\"'no'|translate\" (click)=\"threshold_no()\" fill=\"solid\"\n          [color]=\"threshold_answer[thresholded_oids[current_index]]==false?'warning':'light'\"></ion-button>\n      </ion-buttons>\n    </ion-item>\n    <ion-item *ngIf=\"threshold_answer[thresholded_oids[current_index]] == false\">\n      <p>\n        <span [innerHtml]=\"'assist.thresholds-question-2'|translate\"></span>\n      </p>\n      <ion-buttons slot=\"end\">\n        <ion-input \n          inputmode=\"numeric\" maxlength=\"3\" size=\"3\" type=\"number\" \n          [min]=\"estimates[thresholded_oids[current_index]]\" max=\"100\" step=\"5\" \n          [(ngModel)]=\"thresholds[thresholded_oids[current_index]]\" (ngModelChange)=\"threshold_change()\"\n          debounce=\"100\">\n        </ion-input>&nbsp;%\n      </ion-buttons>\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-button size=\"normal\" shape=\"round\" slot=\"end\" style=\"padding-top: 10px;\"\n          (click)=\"submit_threshold()\" [disabled]=\"threshold_answer[thresholded_oids[current_index]] != true && threshold_answer[thresholded_oids[current_index]] != false\">\n        <ion-label [innerHtml]=\"'OK'|translate\"></ion-label>\n      </ion-button>\n    </ion-item>\n    <ion-item *ngFor=\"let item of [].constructor(thresholded_oids.length-1-current_index); let j = index\" color=\"secondary\"\n        (click)=\"go_index(current_index+1+j)\" style=\"cursor: pointer;\">\n      <ion-label>\n        <b><i [innerHtml]=\"P.p.options[thresholded_oids[current_index+1+j]].name\"></i></b>\n      </ion-label>\n    </ion-item>\n    <!-- debugging info:\n    <ion-item>\n      {{thresholded_oids}}, {{threshold_answer}}, {{JSON.stringify(thresholds)}}\n    </ion-item>\n    -->\n  </ng-container>\n\n  <!-- STEP 5: RESULTING RATINGS: -->\n\n  <!-- selection: -->\n  <ng-container *ngIf=\"step == 5\">\n    <ion-item color=\"success\">\n      <p>\n        <span [innerHtml]=\"'assist.ratings-intro-1'|translate\"></span>\n      </p>\n    </ion-item>\n    <ion-item color=\"light\">\n      <p>\n        <span [innerHtml]=\"'assist.ratings-intro-2'|translate\"></span>\n      </p>\n    </ion-item>\n\n    <ion-item  *ngFor=\"let item of [].constructor(acceptable_oids.length); let i = index\">\n      <ion-text *ngIf=\"acceptable_oids[i] == favourite\">\n        <p>\n          <b><i [innerHtml]=\"P.p.options[favourite].name\"></i></b>\n        </p>\n        <p [innerHtml]=\"'assist.ratings-favourite'|translate:{threshold:thresholds[acceptable_oids[i]], wap:ratings[acceptable_oids[i]]}\"></p>\n      </ion-text>\n      <ion-text *ngIf=\"acceptable_oids[i] != favourite\">\n        <p>\n          <b><i [innerHtml]=\"P.p.options[acceptable_oids[i]].name\"></i></b>\n        </p>\n        <p [innerHtml]=\"'assist.ratings-acceptable'|translate:{threshold:thresholds[acceptable_oids[i]], wap:ratings[acceptable_oids[i]], more_than:100-ratings[acceptable_oids[i]]}\"></p>\n      </ion-text>\n    </ion-item>\n    <ion-item>\n      <p [innerHtml]=\"'assist.ratings-other'|translate\"></p>\n    </ion-item>\n    <ion-item color=\"light\">\n      <p [innerHtml]=\"'assist.ratings-extro'|translate\"></p>\n    </ion-item>\n    <ion-item lines=\"none\" style=\"padding-bottom: 10px!important;\">\n      <ion-button size=\"normal\" shape=\"round\" slot=\"end\" style=\"padding-top: 10px;\"\n          (click)=\"understood_ratings()\">\n        <ion-label [innerHtml]=\"'OK'|translate\"></ion-label>\n      </ion-button>\n    </ion-item>\n    <!-- debugging info: -- >\n    <ion-item>\n      {{thresholded_oids}}, {{JSON.stringify(ratings)}}\n    </ion-item>\n    <!---->\n  </ng-container>\n\n  <ion-fab *ngIf=\"show_up\" vertical=\"top\" horizontal=\"end\" slot=\"fixed\" size=\"small\" class=\"ion-no-margin ion-no-padding\">\n    <ion-fab-button size=\"small\" color=\"light\" (click)=\"scroll_to_top();\">\n      <ion-icon name=\"chevron-up-outline\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n  <ion-fab *ngIf=\"show_down\" vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\" size=\"small\" class=\"ion-no-margin ion-no-padding\">\n    <ion-fab-button size=\"small\" color=\"light\" (click)=\"scroll_to_bottom();\">\n      <ion-icon name=\"chevron-down-outline\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n\n</ion-content>\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { ModalController, IonContent } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { environment } from '../../environments/environment';\nimport { GlobalService } from \"../global.service\";\nimport { PollPage } from '../poll/poll.module';  \n\n@Component({\n  selector: 'app-assist',\n  templateUrl: './assist.page.html',\n  styleUrls: ['./assist.page.scss'],\n})\nexport class AssistPage implements OnInit {\n\n  @Input() P: PollPage;\n  @ViewChild(IonContent, { static: false }) content: IonContent;\n\n  Array = Array;\n  Math = Math;\n  Object = Object;\n  window = window;\n  document = document;\n  environment = environment;\n  JSON = JSON;\n\n  page = \"assist\";\n\n  step = 1;\n  steps_reached = 1;\n  n_steps = 5;\n  changes = false;\n  current_index = 0;\n\n  favourite = \"\";\n  acceptable = {};\n  acceptable_oids = [];\n  estimates = {};\n  thresholded_oids = [];\n  threshold_answer = {};\n  thresholds = {};\n  ratings = {};\n\n  // LIFECYCLE:\n\n  constructor(\n      public translate: TranslateService,\n      private modalController: ModalController,\n      public G: GlobalService) {\n    this.G.L.entry(\"AssistPage.constructor\");\n  }\n\n  ngOnInit() {\n    this.G.L.entry(\"AssistPage.ngOnInit\");\n  }\n\n  ionViewWillEnter() {\n    this.G.L.entry(\"AssistPage.ionViewWillEnter\");\n    this.G.D.page = this;\n    if (this.G.S.default_wap > 0) {\n      for (const oid of this.P.oidsorted) {\n        this.acceptable[oid] = true;\n        this.estimates[oid] = this.G.S.default_wap > 5 ? 105 - this.G.S.default_wap : 100;\n      }\n    } else {\n      for (const oid of this.P.oidsorted) {\n        this.estimates[oid] = 50;\n      }\n    }\n  }\n\n  ionViewDidEnter() {\n    this.G.L.entry(\"AssistPage.ionViewDidEnter\");\n    this.onScroll();\n  }\n\n  onDataReady() {\n    this.G.L.entry(\"AssistPage.onDataReady\");\n  }\n\n  onDataChange() {\n    this.G.L.entry(\"AssistPage.onDataChange\");\n  }\n\n  ionViewWillLeave() {\n    this.G.L.entry(\"AssistPage.ionViewWillLeave\");\n  }\n\n  ionViewDidLeave() {\n    this.G.L.entry(\"AssistPage.ionViewDidLeave\");\n    this.G.D.save_state();\n  }\n\n  set_rating(oid: string, rating: number) {\n    this.ratings[oid] = rating;\n    this.P.p.set_my_own_rating(oid, rating, true);\n  }\n\n  // UI:\n\n  close() {\n    this.modalController.dismiss();\n    this.P.update_order();\n  }\n\n  back() {\n    if (this.step > 1) {\n      this.step = Math.ceil(this.step) - 1;\n      this.changes = false;\n    }\n  }\n\n  forward() {\n    if (this.step < this.steps_reached) {\n      this.step = Math.floor(this.step) + 1;\n    }\n  }\n\n  go_step(step: number) {\n    if (step == 4) {\n      this.thresholded_oids = []\n      for (const oid of this.acceptable_oids) {\n        if (oid != this.favourite) this.thresholded_oids.push(oid);\n      }\n      this.go_index(0);\n    }\n    this.steps_reached = Math.max(this.steps_reached, step);\n    this.step = step;\n  }\n\n  favourite_change() {\n    this.changes = true;\n  }\n  \n  submit_favourite() {\n    this.G.L.entry(\"AssistPage.submit_favourite\", this.favourite);\n    for (const oid of this.P.oidsorted) {\n      if (oid == this.favourite) {\n        this.G.L.trace(\"AssistPage.submit_favourite favourite\", oid, 100);\n        this.set_rating(oid, 100);\n      } else {\n        // make sure it is the sole favourite:\n        const r = Math.min(99, this.P.p.get_my_own_rating(oid));\n        this.G.L.trace(\"AssistPage.submit_favourite other\", oid, r);\n        this.set_rating(oid, r);\n      }\n    }\n    this.G.D.save_state();\n    this.acceptable[this.favourite] = true;\n    this.changes = false;\n    this.step = 1.1;\n  }\n\n  understood_favourite() {\n    this.go_step(2);\n  }\n\n  acceptable_change() {\n    this.changes = true;\n  }\n\n  submit_acceptable() {\n    this.acceptable_oids = [];\n    for (const oid of this.P.oidsorted) {\n      if (this.acceptable[oid]) {\n        this.acceptable_oids.push(oid);\n        if (!(oid in this.estimates)) this.estimates[oid] = 0;\n        if (oid != this.favourite) {\n          // at least give it a rating of one:\n          const r = Math.max(1, this.P.p.get_my_own_rating(oid));\n          this.G.L.trace(\"AssistPage.submit_acceptable other\", oid, r);\n          this.set_rating(oid, r);\n        }\n      } else {\n          // give it a rating of zero:\n          this.G.L.trace(\"AssistPage.submit_acceptable other\", oid, 0);\n          this.set_rating(oid, 0);\n      }\n    }\n    this.changes = false;\n    if (this.acceptable_oids.length > 1) {\n      this.step = 2.1;\n    } else {\n      this.go_step(5);\n    }\n  }\n\n  understood_acceptable() {\n    this.go_step(3);\n  }\n\n  estimate_change() {\n    this.changes = true;\n  }\n\n  submit_estimates() {\n    for (const oid of this.acceptable_oids) {\n      if (!(oid in this.thresholds)) this.thresholds[oid] = 100;\n    }\n    this.changes = false;\n    this.step = 3.1;\n  }\n\n  understood_estimates() {\n    this.go_step(4);\n  }\n\n  go_index(i: number) {\n    this.current_index = i;\n  }\n\n  threshold_yes() {\n    const oid = this.thresholded_oids[this.current_index];\n    if (this.threshold_answer[oid] != true){\n      this.threshold_answer[oid] = true;\n      this.thresholds[oid] = Math.max(0, Math.min(100, this.thresholds[oid], this.estimates[oid]));\n      this.changes = true;\n    }\n  }\n\n  threshold_no() {\n    const oid = this.thresholded_oids[this.current_index];\n    if (this.threshold_answer[oid] != false) {\n      this.threshold_answer[oid] = false;\n      this.thresholds[oid] = Math.min(100, Math.max(0, this.thresholds[oid], this.estimates[oid] + 5));\n      this.changes = true;  \n    }\n  }\n\n  threshold_change() {\n    this.changes = true;\n  }\n\n  submit_threshold() {\n    if (this.current_index+1 < this.thresholded_oids.length) {\n      const oid = this.thresholded_oids[this.current_index];\n      this.current_index++;\n      this.threshold_answer[oid] = null;\n    } else {\n      this.set_thresholded_ratings();\n      this.changes = false;\n      this.go_step(5);\n    }\n  }\n\n  set_thresholded_ratings() {\n    /** set all ratings based on thresholds: */\n    for (const oid of this.thresholded_oids) {\n      const r = Math.max(0, Math.min(100, 105 - this.thresholds[oid]));\n      this.G.L.trace(\"AssistPage.set_ratings\", oid, r);\n      this.set_rating(oid, r);\n    }\n  }\n\n  understood_ratings() {\n    this.close();\n  }\n\n  // deal with scrolling:\n\n  show_up = false;\n  show_down = false;\n\n  async onScroll() {\n    /** find scroll position to be able to react to it */  \n    const elem = this.content;\n  \n    // the ion content has its own associated scrollElement\n    const scrollElement = await (elem as any).getScrollElement();\n    const totalContentHeight = scrollElement.scrollHeight;\n    const viewportHeight = scrollElement.offsetHeight;\n    const scrollPosition = scrollElement.scrollTop;\n    if (totalContentHeight > viewportHeight) {\n      const rel_scroll_position = scrollPosition / (totalContentHeight - viewportHeight);    \n      this.show_down = rel_scroll_position < 1;\n      this.show_up = rel_scroll_position > 0;\n    } else {\n      this.show_down = this.show_up = false;\n    }\n  }\n\n  async scroll_to_top() {\n    const scrollElement = await (this.content as any).getScrollElement();\n    scrollElement.scrollTo(0, 0);\n  }\n  async scroll_to_bottom() {\n    const scrollElement = await (this.content as any).getScrollElement();\n    scrollElement.scrollTo(0, scrollElement.scrollHeight);\n  }\n\n}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AssistPage } from './assist.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssistPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssistPageRoutingModule {}\n","/*\n(C) Copyright 2015â€“2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AssistPageRoutingModule } from './assist-routing.module';\n\nimport { AssistPage } from './assist.page';\nexport { AssistPage } from './assist.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AssistPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [AssistPage]\n})\nexport class AssistPageModule {}\n"],"x_google_ignoreList":[]}